{
    "check_type": "terraform",
    "results": {
        "passed_checks": [
            {
                "check_id": "CKV_AWS_70",
                "bc_check_id": "BC_AWS_S3_23",
                "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"b\" {\n"
                    ],
                    [
                        2,
                        "  bucket = \"mybucket\"\n"
                    ],
                    [
                        3,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  tags = {\n"
                    ],
                    [
                        6,
                        "    Name = \"My bucket\"\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudfront_not_using_waf/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                "repo_file_path": "/cloudfront_not_using_waf/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_s3_bucket.b",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "My bucket"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
            },
            {
                "check_id": "CKV_AWS_93",
                "bc_check_id": "BC_AWS_S3_24",
                "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"b\" {\n"
                    ],
                    [
                        2,
                        "  bucket = \"mybucket\"\n"
                    ],
                    [
                        3,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  tags = {\n"
                    ],
                    [
                        6,
                        "    Name = \"My bucket\"\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudfront_not_using_waf/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                "repo_file_path": "/cloudfront_not_using_waf/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_s3_bucket.b",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "My bucket"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
            },
            {
                "check_id": "CKV_AWS_20",
                "bc_check_id": "BC_AWS_S3_1",
                "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "acl"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"b\" {\n"
                    ],
                    [
                        2,
                        "  bucket = \"mybucket\"\n"
                    ],
                    [
                        3,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  tags = {\n"
                    ],
                    [
                        6,
                        "    Name = \"My bucket\"\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudfront_not_using_waf/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                "repo_file_path": "/cloudfront_not_using_waf/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_s3_bucket.b",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "My bucket"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
            },
            {
                "check_id": "CKV_AWS_57",
                "bc_check_id": "BC_AWS_S3_2",
                "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "acl"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"b\" {\n"
                    ],
                    [
                        2,
                        "  bucket = \"mybucket\"\n"
                    ],
                    [
                        3,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  tags = {\n"
                    ],
                    [
                        6,
                        "    Name = \"My bucket\"\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudfront_not_using_waf/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                "repo_file_path": "/cloudfront_not_using_waf/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_s3_bucket.b",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "My bucket"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
            },
            {
                "check_id": "CKV_AWS_86",
                "bc_check_id": "BC_AWS_LOGGING_20",
                "check_name": "Ensure Cloudfront distribution has Access Logging enabled",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "logging_config/[0]/bucket"
                    ]
                },
                "code_block": [
                    [
                        14,
                        "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                    ],
                    [
                        15,
                        "  origin {\n"
                    ],
                    [
                        16,
                        "    domain_name = aws_s3_bucket.b.bucket_regional_domain_name\n"
                    ],
                    [
                        17,
                        "    origin_id   = local.s3_origin_id\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "    s3_origin_config {\n"
                    ],
                    [
                        20,
                        "      origin_access_identity = \"origin-access-identity/cloudfront/ABCDEFG1234567\"\n"
                    ],
                    [
                        21,
                        "    }\n"
                    ],
                    [
                        22,
                        "  }\n"
                    ],
                    [
                        23,
                        "\n"
                    ],
                    [
                        24,
                        "  enabled             = true\n"
                    ],
                    [
                        25,
                        "  is_ipv6_enabled     = true\n"
                    ],
                    [
                        26,
                        "  comment             = \"Some comment\"\n"
                    ],
                    [
                        27,
                        "  default_root_object = \"index.html\"\n"
                    ],
                    [
                        28,
                        "\n"
                    ],
                    [
                        29,
                        "  logging_config {\n"
                    ],
                    [
                        30,
                        "    include_cookies = false\n"
                    ],
                    [
                        31,
                        "    bucket          = \"mylogs.s3.amazonaws.com\"\n"
                    ],
                    [
                        32,
                        "    prefix          = \"myprefix\"\n"
                    ],
                    [
                        33,
                        "  }\n"
                    ],
                    [
                        34,
                        "\n"
                    ],
                    [
                        35,
                        "  aliases = [\"mysite.example.com\", \"yoursite.example.com\"]\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "  default_cache_behavior {\n"
                    ],
                    [
                        38,
                        "    allowed_methods  = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"]\n"
                    ],
                    [
                        39,
                        "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                    ],
                    [
                        40,
                        "    target_origin_id = local.s3_origin_id\n"
                    ],
                    [
                        41,
                        "\n"
                    ],
                    [
                        42,
                        "    forwarded_values {\n"
                    ],
                    [
                        43,
                        "      query_string = false\n"
                    ],
                    [
                        44,
                        "\n"
                    ],
                    [
                        45,
                        "      cookies {\n"
                    ],
                    [
                        46,
                        "        forward = \"none\"\n"
                    ],
                    [
                        47,
                        "      }\n"
                    ],
                    [
                        48,
                        "    }\n"
                    ],
                    [
                        49,
                        "\n"
                    ],
                    [
                        50,
                        "    viewer_protocol_policy = \"allow-all\"\n"
                    ],
                    [
                        51,
                        "    min_ttl                = 0\n"
                    ],
                    [
                        52,
                        "    default_ttl            = 3600\n"
                    ],
                    [
                        53,
                        "    max_ttl                = 86400\n"
                    ],
                    [
                        54,
                        "  }\n"
                    ],
                    [
                        55,
                        "\n"
                    ],
                    [
                        56,
                        "  # Cache behavior with precedence 0\n"
                    ],
                    [
                        57,
                        "  ordered_cache_behavior {\n"
                    ],
                    [
                        58,
                        "    path_pattern     = \"/content/immutable/*\"\n"
                    ],
                    [
                        59,
                        "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                    ],
                    [
                        60,
                        "    cached_methods   = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                    ],
                    [
                        61,
                        "    target_origin_id = local.s3_origin_id\n"
                    ],
                    [
                        62,
                        "\n"
                    ],
                    [
                        63,
                        "    forwarded_values {\n"
                    ],
                    [
                        64,
                        "      query_string = false\n"
                    ],
                    [
                        65,
                        "      headers      = [\"Origin\"]\n"
                    ],
                    [
                        66,
                        "\n"
                    ],
                    [
                        67,
                        "      cookies {\n"
                    ],
                    [
                        68,
                        "        forward = \"none\"\n"
                    ],
                    [
                        69,
                        "      }\n"
                    ],
                    [
                        70,
                        "    }\n"
                    ],
                    [
                        71,
                        "\n"
                    ],
                    [
                        72,
                        "    min_ttl                = 0\n"
                    ],
                    [
                        73,
                        "    default_ttl            = 86400\n"
                    ],
                    [
                        74,
                        "    max_ttl                = 31536000\n"
                    ],
                    [
                        75,
                        "    compress               = true\n"
                    ],
                    [
                        76,
                        "    viewer_protocol_policy = \"redirect-to-https\"\n"
                    ],
                    [
                        77,
                        "  }\n"
                    ],
                    [
                        78,
                        "\n"
                    ],
                    [
                        79,
                        "  # Cache behavior with precedence 1\n"
                    ],
                    [
                        80,
                        "  ordered_cache_behavior {\n"
                    ],
                    [
                        81,
                        "    path_pattern     = \"/content/*\"\n"
                    ],
                    [
                        82,
                        "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                    ],
                    [
                        83,
                        "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                    ],
                    [
                        84,
                        "    target_origin_id = local.s3_origin_id\n"
                    ],
                    [
                        85,
                        "\n"
                    ],
                    [
                        86,
                        "    forwarded_values {\n"
                    ],
                    [
                        87,
                        "      query_string = false\n"
                    ],
                    [
                        88,
                        "\n"
                    ],
                    [
                        89,
                        "      cookies {\n"
                    ],
                    [
                        90,
                        "        forward = \"none\"\n"
                    ],
                    [
                        91,
                        "      }\n"
                    ],
                    [
                        92,
                        "    }\n"
                    ],
                    [
                        93,
                        "\n"
                    ],
                    [
                        94,
                        "    min_ttl                = 0\n"
                    ],
                    [
                        95,
                        "    default_ttl            = 3600\n"
                    ],
                    [
                        96,
                        "    max_ttl                = 86400\n"
                    ],
                    [
                        97,
                        "    compress               = true\n"
                    ],
                    [
                        98,
                        "    viewer_protocol_policy = \"redirect-to-https\"\n"
                    ],
                    [
                        99,
                        "  }\n"
                    ],
                    [
                        100,
                        "\n"
                    ],
                    [
                        101,
                        "  price_class = \"PriceClass_200\"\n"
                    ],
                    [
                        102,
                        "\n"
                    ],
                    [
                        103,
                        "  restrictions {\n"
                    ],
                    [
                        104,
                        "    geo_restriction {\n"
                    ],
                    [
                        105,
                        "      restriction_type = \"whitelist\"\n"
                    ],
                    [
                        106,
                        "      locations        = [\"US\", \"CA\", \"GB\", \"DE\"]\n"
                    ],
                    [
                        107,
                        "    }\n"
                    ],
                    [
                        108,
                        "  }\n"
                    ],
                    [
                        109,
                        "\n"
                    ],
                    [
                        110,
                        "  tags = {\n"
                    ],
                    [
                        111,
                        "    Environment = \"production\"\n"
                    ],
                    [
                        112,
                        "  }\n"
                    ],
                    [
                        113,
                        "\n"
                    ],
                    [
                        114,
                        "  viewer_certificate {\n"
                    ],
                    [
                        115,
                        "    cloudfront_default_certificate = true\n"
                    ],
                    [
                        116,
                        "  }\n"
                    ],
                    [
                        117,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudfront_not_using_waf/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                "repo_file_path": "/cloudfront_not_using_waf/main.tf",
                "file_line_range": [
                    14,
                    117
                ],
                "resource": "aws_cloudfront_distribution.s3_distribution",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionLogging",
                "fixed_definition": null,
                "entity_tags": {
                    "Environment": "production"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "breadcrumbs": {
                    "default_cache_behavior.target_origin_id": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ],
                    "ordered_cache_behavior.0.target_origin_id": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ],
                    "ordered_cache_behavior.0": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ],
                    "ordered_cache_behavior.1.target_origin_id": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ],
                    "ordered_cache_behavior.1": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ],
                    "origin.origin_id": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ]
                },
                "guideline": "https://docs.bridgecrew.io/docs/logging_20"
            },
            {
                "check_id": "CKV_AWS_70",
                "bc_check_id": "BC_AWS_S3_23",
                "check_name": "Ensure S3 bucket does not allow an action with any Principal",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        10,
                        "resource \"aws_s3_bucket\" \"foo\" {\n"
                    ],
                    [
                        11,
                        "  bucket        = \"tf-test-trail\"\n"
                    ],
                    [
                        12,
                        "  force_destroy = true\n"
                    ],
                    [
                        13,
                        "\n"
                    ],
                    [
                        14,
                        "  policy = <<POLICY\n"
                    ],
                    [
                        15,
                        "{\n"
                    ],
                    [
                        16,
                        "    \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        17,
                        "    \"Statement\": [\n"
                    ],
                    [
                        18,
                        "        {\n"
                    ],
                    [
                        19,
                        "            \"Sid\": \"AWSCloudTrailAclCheck\",\n"
                    ],
                    [
                        20,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        21,
                        "            \"Principal\": {\n"
                    ],
                    [
                        22,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        23,
                        "            },\n"
                    ],
                    [
                        24,
                        "            \"Action\": \"s3:GetBucketAcl\",\n"
                    ],
                    [
                        25,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail\"\n"
                    ],
                    [
                        26,
                        "        },\n"
                    ],
                    [
                        27,
                        "        {\n"
                    ],
                    [
                        28,
                        "            \"Sid\": \"AWSCloudTrailWrite\",\n"
                    ],
                    [
                        29,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        30,
                        "            \"Principal\": {\n"
                    ],
                    [
                        31,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        32,
                        "            },\n"
                    ],
                    [
                        33,
                        "            \"Action\": \"s3:PutObject\",\n"
                    ],
                    [
                        34,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail/prefix/AWSLogs/${data.aws_caller_identity.current.account_id}/*\",\n"
                    ],
                    [
                        35,
                        "            \"Condition\": {\n"
                    ],
                    [
                        36,
                        "                \"StringEquals\": {\n"
                    ],
                    [
                        37,
                        "                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n"
                    ],
                    [
                        38,
                        "                }\n"
                    ],
                    [
                        39,
                        "            }\n"
                    ],
                    [
                        40,
                        "        }\n"
                    ],
                    [
                        41,
                        "    ]\n"
                    ],
                    [
                        42,
                        "}\n"
                    ],
                    [
                        43,
                        "POLICY\n"
                    ],
                    [
                        44,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudtrail_enabled_on_multi_region/main.tf",
                "repo_file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_line_range": [
                    10,
                    44
                ],
                "resource": "aws_s3_bucket.foo",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AllowsAnyPrincipal",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_s3_23"
            },
            {
                "check_id": "CKV_AWS_93",
                "bc_check_id": "BC_AWS_S3_24",
                "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        10,
                        "resource \"aws_s3_bucket\" \"foo\" {\n"
                    ],
                    [
                        11,
                        "  bucket        = \"tf-test-trail\"\n"
                    ],
                    [
                        12,
                        "  force_destroy = true\n"
                    ],
                    [
                        13,
                        "\n"
                    ],
                    [
                        14,
                        "  policy = <<POLICY\n"
                    ],
                    [
                        15,
                        "{\n"
                    ],
                    [
                        16,
                        "    \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        17,
                        "    \"Statement\": [\n"
                    ],
                    [
                        18,
                        "        {\n"
                    ],
                    [
                        19,
                        "            \"Sid\": \"AWSCloudTrailAclCheck\",\n"
                    ],
                    [
                        20,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        21,
                        "            \"Principal\": {\n"
                    ],
                    [
                        22,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        23,
                        "            },\n"
                    ],
                    [
                        24,
                        "            \"Action\": \"s3:GetBucketAcl\",\n"
                    ],
                    [
                        25,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail\"\n"
                    ],
                    [
                        26,
                        "        },\n"
                    ],
                    [
                        27,
                        "        {\n"
                    ],
                    [
                        28,
                        "            \"Sid\": \"AWSCloudTrailWrite\",\n"
                    ],
                    [
                        29,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        30,
                        "            \"Principal\": {\n"
                    ],
                    [
                        31,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        32,
                        "            },\n"
                    ],
                    [
                        33,
                        "            \"Action\": \"s3:PutObject\",\n"
                    ],
                    [
                        34,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail/prefix/AWSLogs/${data.aws_caller_identity.current.account_id}/*\",\n"
                    ],
                    [
                        35,
                        "            \"Condition\": {\n"
                    ],
                    [
                        36,
                        "                \"StringEquals\": {\n"
                    ],
                    [
                        37,
                        "                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n"
                    ],
                    [
                        38,
                        "                }\n"
                    ],
                    [
                        39,
                        "            }\n"
                    ],
                    [
                        40,
                        "        }\n"
                    ],
                    [
                        41,
                        "    ]\n"
                    ],
                    [
                        42,
                        "}\n"
                    ],
                    [
                        43,
                        "POLICY\n"
                    ],
                    [
                        44,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudtrail_enabled_on_multi_region/main.tf",
                "repo_file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_line_range": [
                    10,
                    44
                ],
                "resource": "aws_s3_bucket.foo",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_iam_53"
            },
            {
                "check_id": "CKV_AWS_20",
                "bc_check_id": "BC_AWS_S3_1",
                "check_name": "S3 Bucket has an ACL defined which allows public READ access.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "acl"
                    ]
                },
                "code_block": [
                    [
                        10,
                        "resource \"aws_s3_bucket\" \"foo\" {\n"
                    ],
                    [
                        11,
                        "  bucket        = \"tf-test-trail\"\n"
                    ],
                    [
                        12,
                        "  force_destroy = true\n"
                    ],
                    [
                        13,
                        "\n"
                    ],
                    [
                        14,
                        "  policy = <<POLICY\n"
                    ],
                    [
                        15,
                        "{\n"
                    ],
                    [
                        16,
                        "    \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        17,
                        "    \"Statement\": [\n"
                    ],
                    [
                        18,
                        "        {\n"
                    ],
                    [
                        19,
                        "            \"Sid\": \"AWSCloudTrailAclCheck\",\n"
                    ],
                    [
                        20,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        21,
                        "            \"Principal\": {\n"
                    ],
                    [
                        22,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        23,
                        "            },\n"
                    ],
                    [
                        24,
                        "            \"Action\": \"s3:GetBucketAcl\",\n"
                    ],
                    [
                        25,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail\"\n"
                    ],
                    [
                        26,
                        "        },\n"
                    ],
                    [
                        27,
                        "        {\n"
                    ],
                    [
                        28,
                        "            \"Sid\": \"AWSCloudTrailWrite\",\n"
                    ],
                    [
                        29,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        30,
                        "            \"Principal\": {\n"
                    ],
                    [
                        31,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        32,
                        "            },\n"
                    ],
                    [
                        33,
                        "            \"Action\": \"s3:PutObject\",\n"
                    ],
                    [
                        34,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail/prefix/AWSLogs/${data.aws_caller_identity.current.account_id}/*\",\n"
                    ],
                    [
                        35,
                        "            \"Condition\": {\n"
                    ],
                    [
                        36,
                        "                \"StringEquals\": {\n"
                    ],
                    [
                        37,
                        "                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n"
                    ],
                    [
                        38,
                        "                }\n"
                    ],
                    [
                        39,
                        "            }\n"
                    ],
                    [
                        40,
                        "        }\n"
                    ],
                    [
                        41,
                        "    ]\n"
                    ],
                    [
                        42,
                        "}\n"
                    ],
                    [
                        43,
                        "POLICY\n"
                    ],
                    [
                        44,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudtrail_enabled_on_multi_region/main.tf",
                "repo_file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_line_range": [
                    10,
                    44
                ],
                "resource": "aws_s3_bucket.foo",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLRead",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_1-acl-read-permissions-everyone"
            },
            {
                "check_id": "CKV_AWS_57",
                "bc_check_id": "BC_AWS_S3_2",
                "check_name": "S3 Bucket has an ACL defined which allows public WRITE access.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "acl"
                    ]
                },
                "code_block": [
                    [
                        10,
                        "resource \"aws_s3_bucket\" \"foo\" {\n"
                    ],
                    [
                        11,
                        "  bucket        = \"tf-test-trail\"\n"
                    ],
                    [
                        12,
                        "  force_destroy = true\n"
                    ],
                    [
                        13,
                        "\n"
                    ],
                    [
                        14,
                        "  policy = <<POLICY\n"
                    ],
                    [
                        15,
                        "{\n"
                    ],
                    [
                        16,
                        "    \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        17,
                        "    \"Statement\": [\n"
                    ],
                    [
                        18,
                        "        {\n"
                    ],
                    [
                        19,
                        "            \"Sid\": \"AWSCloudTrailAclCheck\",\n"
                    ],
                    [
                        20,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        21,
                        "            \"Principal\": {\n"
                    ],
                    [
                        22,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        23,
                        "            },\n"
                    ],
                    [
                        24,
                        "            \"Action\": \"s3:GetBucketAcl\",\n"
                    ],
                    [
                        25,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail\"\n"
                    ],
                    [
                        26,
                        "        },\n"
                    ],
                    [
                        27,
                        "        {\n"
                    ],
                    [
                        28,
                        "            \"Sid\": \"AWSCloudTrailWrite\",\n"
                    ],
                    [
                        29,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        30,
                        "            \"Principal\": {\n"
                    ],
                    [
                        31,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        32,
                        "            },\n"
                    ],
                    [
                        33,
                        "            \"Action\": \"s3:PutObject\",\n"
                    ],
                    [
                        34,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail/prefix/AWSLogs/${data.aws_caller_identity.current.account_id}/*\",\n"
                    ],
                    [
                        35,
                        "            \"Condition\": {\n"
                    ],
                    [
                        36,
                        "                \"StringEquals\": {\n"
                    ],
                    [
                        37,
                        "                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n"
                    ],
                    [
                        38,
                        "                }\n"
                    ],
                    [
                        39,
                        "            }\n"
                    ],
                    [
                        40,
                        "        }\n"
                    ],
                    [
                        41,
                        "    ]\n"
                    ],
                    [
                        42,
                        "}\n"
                    ],
                    [
                        43,
                        "POLICY\n"
                    ],
                    [
                        44,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudtrail_enabled_on_multi_region/main.tf",
                "repo_file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_line_range": [
                    10,
                    44
                ],
                "resource": "aws_s3_bucket.foo",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3PublicACLWRITE",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_2-acl-write-permissions-everyone"
            },
            {
                "check_id": "CKV_AWS_41",
                "bc_check_id": "BC_AWS_SECRETS_5",
                "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "provider \"aws\" {\n"
                    ],
                    [
                        2,
                        "  region = \"us-east-1\"\n"
                    ],
                    [
                        3,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_ec2_to_default_vpc/main.tf",
                "repo_file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_line_range": [
                    1,
                    3
                ],
                "resource": "aws.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.provider.aws.credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
            },
            {
                "check_id": "CKV_AWS_130",
                "bc_check_id": "BC_AWS_NETWORKING_53",
                "check_name": "Ensure VPC subnets do not assign public IP by default",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "map_public_ip_on_launch"
                    ]
                },
                "code_block": [
                    [
                        18,
                        "resource \"aws_subnet\" \"default-subnet\" {\n"
                    ],
                    [
                        19,
                        "  vpc_id     = aws_default_vpc.default.id\n"
                    ],
                    [
                        20,
                        "  cidr_block = \"192.168.10.0/24\"\n"
                    ],
                    [
                        21,
                        "  availability_zone = local.region\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_ec2_to_default_vpc/main.tf",
                "repo_file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_line_range": [
                    18,
                    22
                ],
                "resource": "aws_subnet.default-subnet",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SubnetPublicIP",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "breadcrumbs": {
                    "availability_zone": [
                        {
                            "type": "locals",
                            "name": "region",
                            "path": "/tmp/ws-scm/JS-Demo/deploy_ec2_to_default_vpc/main.tf",
                            "module_connection": false
                        }
                    ]
                },
                "guideline": "https://docs.bridgecrew.io/docs/ensure-vpc-subnets-do-not-assign-public-ip-by-default"
            },
            {
                "check_id": "CKV_AWS_46",
                "bc_check_id": "BC_AWS_SECRETS_1",
                "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "user_data"
                    ]
                },
                "code_block": [
                    [
                        49,
                        "resource \"aws_instance\" \"t2-instance\" {\n"
                    ],
                    [
                        50,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        51,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        52,
                        "  subnet_id = aws_subnet.default-subnet.id\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_ec2_to_default_vpc/main.tf",
                "repo_file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_line_range": [
                    49,
                    53
                ],
                "resource": "aws_instance.t2-instance",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
            },
            {
                "check_id": "CKV_AWS_88",
                "bc_check_id": "BC_AWS_PUBLIC_12",
                "check_name": "EC2 instance should not have public IP.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        49,
                        "resource \"aws_instance\" \"t2-instance\" {\n"
                    ],
                    [
                        50,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        51,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        52,
                        "  subnet_id = aws_subnet.default-subnet.id\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_ec2_to_default_vpc/main.tf",
                "repo_file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_line_range": [
                    49,
                    53
                ],
                "resource": "aws_instance.t2-instance",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/public_12"
            },
            {
                "check_id": "CKV_AWS_41",
                "bc_check_id": "BC_AWS_SECRETS_5",
                "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "provider \"aws\" {\n"
                    ],
                    [
                        2,
                        "  region                  = \"us-west-1\"\n"
                    ],
                    [
                        3,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_redshift_in_ec2_classic_mode/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_redshift_in_ec2_classic_mode/main.tf",
                "repo_file_path": "/deploy_redshift_in_ec2_classic_mode/main.tf",
                "file_line_range": [
                    1,
                    3
                ],
                "resource": "aws.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.provider.aws.credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
            },
            {
                "check_id": "CKV_AWS_141",
                "bc_check_id": "BC_AWS_GENERAL_70",
                "check_name": "Ensured that redshift cluster allowing version upgrade by default",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "allow_version_upgrade"
                    ]
                },
                "code_block": [
                    [
                        5,
                        "resource \"aws_redshift_cluster\" \"test\" {\n"
                    ],
                    [
                        6,
                        "  cluster_identifier = \"redshift-defaults-only\"\n"
                    ],
                    [
                        7,
                        "  node_type = \"dc2.large\"\n"
                    ],
                    [
                        8,
                        "  master_password = \"Test1234\"\n"
                    ],
                    [
                        9,
                        "  master_username = \"test\"\n"
                    ],
                    [
                        10,
                        "  skip_final_snapshot = true\n"
                    ],
                    [
                        11,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_redshift_in_ec2_classic_mode/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_redshift_in_ec2_classic_mode/main.tf",
                "repo_file_path": "/deploy_redshift_in_ec2_classic_mode/main.tf",
                "file_line_range": [
                    5,
                    11
                ],
                "resource": "aws_redshift_cluster.test",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RedshiftClusterAllowVersionUpgrade",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-redshift-clusters-allow-version-upgrade-by-default"
            },
            {
                "check_id": "CKV_AWS_46",
                "bc_check_id": "BC_AWS_SECRETS_1",
                "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "user_data"
                    ]
                },
                "code_block": [
                    [
                        17,
                        "resource \"aws_instance\" \"web\" {\n"
                    ],
                    [
                        18,
                        "  ami           = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        19,
                        "  instance_type = \"c1.xlarge\"\n"
                    ],
                    [
                        20,
                        "\n"
                    ],
                    [
                        21,
                        "  tags = {\n"
                    ],
                    [
                        22,
                        "    Name = \"HelloWorld\"\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "}\n"
                    ]
                ],
                "file_path": "/ec2_ebs_not_optimized/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/ec2_ebs_not_optimized/main.tf",
                "repo_file_path": "/ec2_ebs_not_optimized/main.tf",
                "file_line_range": [
                    17,
                    24
                ],
                "resource": "aws_instance.web",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "HelloWorld"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
            },
            {
                "check_id": "CKV_AWS_88",
                "bc_check_id": "BC_AWS_PUBLIC_12",
                "check_name": "EC2 instance should not have public IP.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        17,
                        "resource \"aws_instance\" \"web\" {\n"
                    ],
                    [
                        18,
                        "  ami           = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        19,
                        "  instance_type = \"c1.xlarge\"\n"
                    ],
                    [
                        20,
                        "\n"
                    ],
                    [
                        21,
                        "  tags = {\n"
                    ],
                    [
                        22,
                        "    Name = \"HelloWorld\"\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "}\n"
                    ]
                ],
                "file_path": "/ec2_ebs_not_optimized/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/ec2_ebs_not_optimized/main.tf",
                "repo_file_path": "/ec2_ebs_not_optimized/main.tf",
                "file_line_range": [
                    17,
                    24
                ],
                "resource": "aws_instance.web",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "HelloWorld"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/public_12"
            },
            {
                "check_id": "CKV_AWS_163",
                "bc_check_id": "BC_AWS_GENERAL_8",
                "check_name": "Ensure ECR image scanning on push is enabled",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "image_scanning_configuration/[0]/scan_on_push"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_ecr_repository\" \"foo\" {\n"
                    ],
                    [
                        2,
                        "  name                 = \"bar\"\n"
                    ],
                    [
                        3,
                        "  image_tag_mutability = \"MUTABLE\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  image_scanning_configuration {\n"
                    ],
                    [
                        6,
                        "    scan_on_push = true\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/ecr_make_tags_immutable/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/ecr_make_tags_immutable/main.tf",
                "repo_file_path": "/ecr_make_tags_immutable/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_ecr_repository.foo",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ECRImageScanning",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_8"
            },
            {
                "check_id": "CKV_AWS_33",
                "bc_check_id": "BC_AWS_IAM_63",
                "check_name": "Ensure KMS key policy does not contain wildcard (*) principal",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_kms_key\" \"a\" {\n"
                    ],
                    [
                        2,
                        "  description             = \"KMS key 1\"\n"
                    ],
                    [
                        3,
                        "  deletion_window_in_days = 10\n"
                    ],
                    [
                        4,
                        "}"
                    ]
                ],
                "file_path": "/kms_uses_rotation/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/kms_uses_rotation/main.tf",
                "repo_file_path": "/kms_uses_rotation/main.tf",
                "file_line_range": [
                    1,
                    4
                ],
                "resource": "aws_kms_key.a",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.KMSKeyWildcardPrincipal",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-kms-key-policy-does-not-contain-wildcard-principal"
            },
            {
                "check_id": "CKV_AWS_41",
                "bc_check_id": "BC_AWS_SECRETS_5",
                "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "provider \"aws\" {\n"
                    ],
                    [
                        2,
                        "  region = \"us-east-1\"\n"
                    ],
                    [
                        3,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_rules/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_rules/main.tf",
                "repo_file_path": "/security_group_no_description_for_rules/main.tf",
                "file_line_range": [
                    1,
                    3
                ],
                "resource": "aws.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.provider.aws.credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
            },
            {
                "check_id": "CKV_AWS_24",
                "bc_check_id": "BC_AWS_NETWORKING_1",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        15,
                        "resource \"aws_security_group\" \"default\" {\n"
                    ],
                    [
                        16,
                        "  name        = \"examplerulename\"\n"
                    ],
                    [
                        17,
                        "  vpc_id      = aws_vpc.vpc.id\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  ingress {\n"
                    ],
                    [
                        20,
                        "    from_port   = 443\n"
                    ],
                    [
                        21,
                        "    to_port     = 443\n"
                    ],
                    [
                        22,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        23,
                        "    cidr_blocks = [\"10.0.0.0/24\"]\n"
                    ],
                    [
                        24,
                        "  }\n"
                    ],
                    [
                        25,
                        "\n"
                    ],
                    [
                        26,
                        "  egress {\n"
                    ],
                    [
                        27,
                        "    from_port   = 0\n"
                    ],
                    [
                        28,
                        "    to_port     = 0\n"
                    ],
                    [
                        29,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        30,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        31,
                        "  }\n"
                    ],
                    [
                        32,
                        "\n"
                    ],
                    [
                        33,
                        "  tags = {\n"
                    ],
                    [
                        34,
                        "    Name = \"example_rule_with_descriptions\"\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_rules/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_rules/main.tf",
                "repo_file_path": "/security_group_no_description_for_rules/main.tf",
                "file_line_range": [
                    15,
                    36
                ],
                "resource": "aws_security_group.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "example_rule_with_descriptions"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
            },
            {
                "check_id": "CKV_AWS_25",
                "bc_check_id": "BC_AWS_NETWORKING_2",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        15,
                        "resource \"aws_security_group\" \"default\" {\n"
                    ],
                    [
                        16,
                        "  name        = \"examplerulename\"\n"
                    ],
                    [
                        17,
                        "  vpc_id      = aws_vpc.vpc.id\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  ingress {\n"
                    ],
                    [
                        20,
                        "    from_port   = 443\n"
                    ],
                    [
                        21,
                        "    to_port     = 443\n"
                    ],
                    [
                        22,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        23,
                        "    cidr_blocks = [\"10.0.0.0/24\"]\n"
                    ],
                    [
                        24,
                        "  }\n"
                    ],
                    [
                        25,
                        "\n"
                    ],
                    [
                        26,
                        "  egress {\n"
                    ],
                    [
                        27,
                        "    from_port   = 0\n"
                    ],
                    [
                        28,
                        "    to_port     = 0\n"
                    ],
                    [
                        29,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        30,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        31,
                        "  }\n"
                    ],
                    [
                        32,
                        "\n"
                    ],
                    [
                        33,
                        "  tags = {\n"
                    ],
                    [
                        34,
                        "    Name = \"example_rule_with_descriptions\"\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_rules/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_rules/main.tf",
                "repo_file_path": "/security_group_no_description_for_rules/main.tf",
                "file_line_range": [
                    15,
                    36
                ],
                "resource": "aws_security_group.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "example_rule_with_descriptions"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_2"
            },
            {
                "check_id": "CKV_AWS_130",
                "bc_check_id": "BC_AWS_NETWORKING_53",
                "check_name": "Ensure VPC subnets do not assign public IP by default",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "map_public_ip_on_launch"
                    ]
                },
                "code_block": [
                    [
                        38,
                        "resource \"aws_subnet\" \"subnet\" {\n"
                    ],
                    [
                        39,
                        "  vpc_id     = aws_vpc.vpc.id\n"
                    ],
                    [
                        40,
                        "  cidr_block = local.cidr_block\n"
                    ],
                    [
                        41,
                        "\n"
                    ],
                    [
                        42,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_rules/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_rules/main.tf",
                "repo_file_path": "/security_group_no_description_for_rules/main.tf",
                "file_line_range": [
                    38,
                    42
                ],
                "resource": "aws_subnet.subnet",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SubnetPublicIP",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "breadcrumbs": {
                    "cidr_block": [
                        {
                            "type": "locals",
                            "name": "cidr_block",
                            "path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_rules/main.tf",
                            "module_connection": false
                        }
                    ]
                },
                "guideline": "https://docs.bridgecrew.io/docs/ensure-vpc-subnets-do-not-assign-public-ip-by-default"
            },
            {
                "check_id": "CKV_AWS_46",
                "bc_check_id": "BC_AWS_SECRETS_1",
                "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "user_data"
                    ]
                },
                "code_block": [
                    [
                        61,
                        "resource \"aws_instance\" \"ec2\" {\n"
                    ],
                    [
                        62,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        63,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        64,
                        "  subnet_id     = aws_subnet.subnet.id\n"
                    ],
                    [
                        65,
                        "  vpc_security_group_ids  = [aws_security_group.default.id]\n"
                    ],
                    [
                        66,
                        "\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_rules/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_rules/main.tf",
                "repo_file_path": "/security_group_no_description_for_rules/main.tf",
                "file_line_range": [
                    61,
                    67
                ],
                "resource": "aws_instance.ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
            },
            {
                "check_id": "CKV_AWS_88",
                "bc_check_id": "BC_AWS_PUBLIC_12",
                "check_name": "EC2 instance should not have public IP.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        61,
                        "resource \"aws_instance\" \"ec2\" {\n"
                    ],
                    [
                        62,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        63,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        64,
                        "  subnet_id     = aws_subnet.subnet.id\n"
                    ],
                    [
                        65,
                        "  vpc_security_group_ids  = [aws_security_group.default.id]\n"
                    ],
                    [
                        66,
                        "\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_rules/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_rules/main.tf",
                "repo_file_path": "/security_group_no_description_for_rules/main.tf",
                "file_line_range": [
                    61,
                    67
                ],
                "resource": "aws_instance.ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/public_12"
            },
            {
                "check_id": "CKV_AWS_41",
                "bc_check_id": "BC_AWS_SECRETS_5",
                "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "provider \"aws\" {\n"
                    ],
                    [
                        2,
                        "  region = \"us-east-1\"\n"
                    ],
                    [
                        3,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                "repo_file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_line_range": [
                    1,
                    3
                ],
                "resource": "aws.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.provider.aws.credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
            },
            {
                "check_id": "CKV_AWS_23",
                "bc_check_id": "BC_AWS_NETWORKING_31",
                "check_name": "Ensure every security groups rule has a description",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        15,
                        "resource \"aws_security_group\" \"default\" {\n"
                    ],
                    [
                        16,
                        "  name        = \"examplerulename\"\n"
                    ],
                    [
                        17,
                        "  vpc_id      = aws_vpc.vpc.id\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  ingress {\n"
                    ],
                    [
                        20,
                        "    description = \"This is an inbound rule for something....\"\n"
                    ],
                    [
                        21,
                        "    from_port   = 443\n"
                    ],
                    [
                        22,
                        "    to_port     = 443\n"
                    ],
                    [
                        23,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        24,
                        "    cidr_blocks = [\"10.0.0.0/24\"]\n"
                    ],
                    [
                        25,
                        "  }\n"
                    ],
                    [
                        26,
                        "\n"
                    ],
                    [
                        27,
                        "  egress {\n"
                    ],
                    [
                        28,
                        "    description = \"this is an egress rule for something else....\"\n"
                    ],
                    [
                        29,
                        "    from_port   = 0\n"
                    ],
                    [
                        30,
                        "    to_port     = 0\n"
                    ],
                    [
                        31,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        32,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        33,
                        "  }\n"
                    ],
                    [
                        34,
                        "\n"
                    ],
                    [
                        35,
                        "  tags = {\n"
                    ],
                    [
                        36,
                        "    Name = \"example_rule_with_descriptions\"\n"
                    ],
                    [
                        37,
                        "  }\n"
                    ],
                    [
                        38,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                "repo_file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_line_range": [
                    15,
                    38
                ],
                "resource": "aws_security_group.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "example_rule_with_descriptions"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_31"
            },
            {
                "check_id": "CKV_AWS_24",
                "bc_check_id": "BC_AWS_NETWORKING_1",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        15,
                        "resource \"aws_security_group\" \"default\" {\n"
                    ],
                    [
                        16,
                        "  name        = \"examplerulename\"\n"
                    ],
                    [
                        17,
                        "  vpc_id      = aws_vpc.vpc.id\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  ingress {\n"
                    ],
                    [
                        20,
                        "    description = \"This is an inbound rule for something....\"\n"
                    ],
                    [
                        21,
                        "    from_port   = 443\n"
                    ],
                    [
                        22,
                        "    to_port     = 443\n"
                    ],
                    [
                        23,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        24,
                        "    cidr_blocks = [\"10.0.0.0/24\"]\n"
                    ],
                    [
                        25,
                        "  }\n"
                    ],
                    [
                        26,
                        "\n"
                    ],
                    [
                        27,
                        "  egress {\n"
                    ],
                    [
                        28,
                        "    description = \"this is an egress rule for something else....\"\n"
                    ],
                    [
                        29,
                        "    from_port   = 0\n"
                    ],
                    [
                        30,
                        "    to_port     = 0\n"
                    ],
                    [
                        31,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        32,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        33,
                        "  }\n"
                    ],
                    [
                        34,
                        "\n"
                    ],
                    [
                        35,
                        "  tags = {\n"
                    ],
                    [
                        36,
                        "    Name = \"example_rule_with_descriptions\"\n"
                    ],
                    [
                        37,
                        "  }\n"
                    ],
                    [
                        38,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                "repo_file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_line_range": [
                    15,
                    38
                ],
                "resource": "aws_security_group.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "example_rule_with_descriptions"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
            },
            {
                "check_id": "CKV_AWS_25",
                "bc_check_id": "BC_AWS_NETWORKING_2",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        15,
                        "resource \"aws_security_group\" \"default\" {\n"
                    ],
                    [
                        16,
                        "  name        = \"examplerulename\"\n"
                    ],
                    [
                        17,
                        "  vpc_id      = aws_vpc.vpc.id\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  ingress {\n"
                    ],
                    [
                        20,
                        "    description = \"This is an inbound rule for something....\"\n"
                    ],
                    [
                        21,
                        "    from_port   = 443\n"
                    ],
                    [
                        22,
                        "    to_port     = 443\n"
                    ],
                    [
                        23,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        24,
                        "    cidr_blocks = [\"10.0.0.0/24\"]\n"
                    ],
                    [
                        25,
                        "  }\n"
                    ],
                    [
                        26,
                        "\n"
                    ],
                    [
                        27,
                        "  egress {\n"
                    ],
                    [
                        28,
                        "    description = \"this is an egress rule for something else....\"\n"
                    ],
                    [
                        29,
                        "    from_port   = 0\n"
                    ],
                    [
                        30,
                        "    to_port     = 0\n"
                    ],
                    [
                        31,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        32,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        33,
                        "  }\n"
                    ],
                    [
                        34,
                        "\n"
                    ],
                    [
                        35,
                        "  tags = {\n"
                    ],
                    [
                        36,
                        "    Name = \"example_rule_with_descriptions\"\n"
                    ],
                    [
                        37,
                        "  }\n"
                    ],
                    [
                        38,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                "repo_file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_line_range": [
                    15,
                    38
                ],
                "resource": "aws_security_group.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "example_rule_with_descriptions"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_2"
            },
            {
                "check_id": "CKV_AWS_130",
                "bc_check_id": "BC_AWS_NETWORKING_53",
                "check_name": "Ensure VPC subnets do not assign public IP by default",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "map_public_ip_on_launch"
                    ]
                },
                "code_block": [
                    [
                        40,
                        "resource \"aws_subnet\" \"subnet\" {\n"
                    ],
                    [
                        41,
                        "  vpc_id     = aws_vpc.vpc.id\n"
                    ],
                    [
                        42,
                        "  cidr_block = local.cidr_block\n"
                    ],
                    [
                        43,
                        "\n"
                    ],
                    [
                        44,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                "repo_file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_line_range": [
                    40,
                    44
                ],
                "resource": "aws_subnet.subnet",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SubnetPublicIP",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "breadcrumbs": {
                    "cidr_block": [
                        {
                            "type": "locals",
                            "name": "cidr_block",
                            "path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                            "module_connection": false
                        }
                    ]
                },
                "guideline": "https://docs.bridgecrew.io/docs/ensure-vpc-subnets-do-not-assign-public-ip-by-default"
            },
            {
                "check_id": "CKV_AWS_46",
                "bc_check_id": "BC_AWS_SECRETS_1",
                "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "user_data"
                    ]
                },
                "code_block": [
                    [
                        63,
                        "resource \"aws_instance\" \"ec2\" {\n"
                    ],
                    [
                        64,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        65,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        66,
                        "  subnet_id     = aws_subnet.subnet.id\n"
                    ],
                    [
                        67,
                        "  vpc_security_group_ids  = [aws_security_group.default.id]\n"
                    ],
                    [
                        68,
                        "\n"
                    ],
                    [
                        69,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                "repo_file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_line_range": [
                    63,
                    69
                ],
                "resource": "aws_instance.ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
            },
            {
                "check_id": "CKV_AWS_88",
                "bc_check_id": "BC_AWS_PUBLIC_12",
                "check_name": "EC2 instance should not have public IP.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        63,
                        "resource \"aws_instance\" \"ec2\" {\n"
                    ],
                    [
                        64,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        65,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        66,
                        "  subnet_id     = aws_subnet.subnet.id\n"
                    ],
                    [
                        67,
                        "  vpc_security_group_ids  = [aws_security_group.default.id]\n"
                    ],
                    [
                        68,
                        "\n"
                    ],
                    [
                        69,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                "repo_file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_line_range": [
                    63,
                    69
                ],
                "resource": "aws_instance.ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/public_12"
            },
            {
                "check_id": "CKV_AWS_23",
                "bc_check_id": "BC_AWS_NETWORKING_31",
                "check_name": "Ensure every security groups rule has a description",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "description"
                    ]
                },
                "code_block": [
                    [
                        7,
                        "resource \"aws_security_group\" \"allow_tls\" {\n"
                    ],
                    [
                        8,
                        "  name        = \"allow_tls\"\n"
                    ],
                    [
                        9,
                        "  vpc_id = aws_vpc.example.id\n"
                    ],
                    [
                        10,
                        "  description = \"Allow TLS inbound traffic\"\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  ingress {\n"
                    ],
                    [
                        13,
                        "    description      = \"TLS anywhere\"\n"
                    ],
                    [
                        14,
                        "    from_port        = 443\n"
                    ],
                    [
                        15,
                        "    to_port          = 443\n"
                    ],
                    [
                        16,
                        "    protocol         = \"tcp\"\n"
                    ],
                    [
                        17,
                        "    cidr_blocks      = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "\n"
                    ],
                    [
                        20,
                        "  egress {\n"
                    ],
                    [
                        21,
                        "    from_port        = 0\n"
                    ],
                    [
                        22,
                        "    to_port          = 0\n"
                    ],
                    [
                        23,
                        "    protocol         = \"-1\"\n"
                    ],
                    [
                        24,
                        "    cidr_blocks      = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        25,
                        "    ipv6_cidr_blocks = [\"::/0\"]\n"
                    ],
                    [
                        26,
                        "  }\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "  tags = {\n"
                    ],
                    [
                        29,
                        "    Name = \"allow_tls\"\n"
                    ],
                    [
                        30,
                        "  }\n"
                    ],
                    [
                        31,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_unused/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_unused/main.tf",
                "repo_file_path": "/security_group_no_unused/main.tf",
                "file_line_range": [
                    7,
                    31
                ],
                "resource": "aws_security_group.allow_tls",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "allow_tls"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_31"
            },
            {
                "check_id": "CKV_AWS_24",
                "bc_check_id": "BC_AWS_NETWORKING_1",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        7,
                        "resource \"aws_security_group\" \"allow_tls\" {\n"
                    ],
                    [
                        8,
                        "  name        = \"allow_tls\"\n"
                    ],
                    [
                        9,
                        "  vpc_id = aws_vpc.example.id\n"
                    ],
                    [
                        10,
                        "  description = \"Allow TLS inbound traffic\"\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  ingress {\n"
                    ],
                    [
                        13,
                        "    description      = \"TLS anywhere\"\n"
                    ],
                    [
                        14,
                        "    from_port        = 443\n"
                    ],
                    [
                        15,
                        "    to_port          = 443\n"
                    ],
                    [
                        16,
                        "    protocol         = \"tcp\"\n"
                    ],
                    [
                        17,
                        "    cidr_blocks      = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "\n"
                    ],
                    [
                        20,
                        "  egress {\n"
                    ],
                    [
                        21,
                        "    from_port        = 0\n"
                    ],
                    [
                        22,
                        "    to_port          = 0\n"
                    ],
                    [
                        23,
                        "    protocol         = \"-1\"\n"
                    ],
                    [
                        24,
                        "    cidr_blocks      = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        25,
                        "    ipv6_cidr_blocks = [\"::/0\"]\n"
                    ],
                    [
                        26,
                        "  }\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "  tags = {\n"
                    ],
                    [
                        29,
                        "    Name = \"allow_tls\"\n"
                    ],
                    [
                        30,
                        "  }\n"
                    ],
                    [
                        31,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_unused/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_unused/main.tf",
                "repo_file_path": "/security_group_no_unused/main.tf",
                "file_line_range": [
                    7,
                    31
                ],
                "resource": "aws_security_group.allow_tls",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "allow_tls"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_1-port-security"
            },
            {
                "check_id": "CKV_AWS_25",
                "bc_check_id": "BC_AWS_NETWORKING_2",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        7,
                        "resource \"aws_security_group\" \"allow_tls\" {\n"
                    ],
                    [
                        8,
                        "  name        = \"allow_tls\"\n"
                    ],
                    [
                        9,
                        "  vpc_id = aws_vpc.example.id\n"
                    ],
                    [
                        10,
                        "  description = \"Allow TLS inbound traffic\"\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  ingress {\n"
                    ],
                    [
                        13,
                        "    description      = \"TLS anywhere\"\n"
                    ],
                    [
                        14,
                        "    from_port        = 443\n"
                    ],
                    [
                        15,
                        "    to_port          = 443\n"
                    ],
                    [
                        16,
                        "    protocol         = \"tcp\"\n"
                    ],
                    [
                        17,
                        "    cidr_blocks      = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "\n"
                    ],
                    [
                        20,
                        "  egress {\n"
                    ],
                    [
                        21,
                        "    from_port        = 0\n"
                    ],
                    [
                        22,
                        "    to_port          = 0\n"
                    ],
                    [
                        23,
                        "    protocol         = \"-1\"\n"
                    ],
                    [
                        24,
                        "    cidr_blocks      = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        25,
                        "    ipv6_cidr_blocks = [\"::/0\"]\n"
                    ],
                    [
                        26,
                        "  }\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "  tags = {\n"
                    ],
                    [
                        29,
                        "    Name = \"allow_tls\"\n"
                    ],
                    [
                        30,
                        "  }\n"
                    ],
                    [
                        31,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_unused/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_unused/main.tf",
                "repo_file_path": "/security_group_no_unused/main.tf",
                "file_line_range": [
                    7,
                    31
                ],
                "resource": "aws_security_group.allow_tls",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "allow_tls"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_2"
            },
            {
                "check_id": "CKV_AWS_41",
                "bc_check_id": "BC_AWS_SECRETS_5",
                "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "provider \"aws\" {\n"
                    ],
                    [
                        2,
                        "  region = \"us-east-1\"\n"
                    ],
                    [
                        3,
                        "}\n"
                    ]
                ],
                "file_path": "/tag_all_items/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/tag_all_items/main.tf",
                "repo_file_path": "/tag_all_items/main.tf",
                "file_line_range": [
                    1,
                    3
                ],
                "resource": "aws.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.provider.aws.credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
            },
            {
                "check_id": "CKV_AWS_41",
                "bc_check_id": "BC_AWS_SECRETS_5",
                "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "provider \"aws\" {\n"
                    ],
                    [
                        2,
                        "  region = \"us-east-1\"\n"
                    ],
                    [
                        3,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    1,
                    3
                ],
                "resource": "aws.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.provider.aws.credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_5"
            },
            {
                "check_id": "CKV_AWS_46",
                "bc_check_id": "BC_AWS_SECRETS_1",
                "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "user_data"
                    ]
                },
                "code_block": [
                    [
                        45,
                        "resource \"aws_instance\" \"example_with_new_ami\" {\n"
                    ],
                    [
                        46,
                        "  ami = aws_ami.example.id\n"
                    ],
                    [
                        47,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        48,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    45,
                    48
                ],
                "resource": "aws_instance.example_with_new_ami",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
            },
            {
                "check_id": "CKV_AWS_88",
                "bc_check_id": "BC_AWS_PUBLIC_12",
                "check_name": "EC2 instance should not have public IP.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        45,
                        "resource \"aws_instance\" \"example_with_new_ami\" {\n"
                    ],
                    [
                        46,
                        "  ami = aws_ami.example.id\n"
                    ],
                    [
                        47,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        48,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    45,
                    48
                ],
                "resource": "aws_instance.example_with_new_ami",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/public_12"
            },
            {
                "check_id": "CKV_AWS_46",
                "bc_check_id": "BC_AWS_SECRETS_1",
                "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "user_data"
                    ]
                },
                "code_block": [
                    [
                        80,
                        "resource \"aws_instance\" \"example_with_copied_ami\" {\n"
                    ],
                    [
                        81,
                        "  ami = aws_ami_copy.example.id\n"
                    ],
                    [
                        82,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        83,
                        "  \n"
                    ],
                    [
                        84,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    80,
                    84
                ],
                "resource": "aws_instance.example_with_copied_ami",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
            },
            {
                "check_id": "CKV_AWS_88",
                "bc_check_id": "BC_AWS_PUBLIC_12",
                "check_name": "EC2 instance should not have public IP.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        80,
                        "resource \"aws_instance\" \"example_with_copied_ami\" {\n"
                    ],
                    [
                        81,
                        "  ami = aws_ami_copy.example.id\n"
                    ],
                    [
                        82,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        83,
                        "  \n"
                    ],
                    [
                        84,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    80,
                    84
                ],
                "resource": "aws_instance.example_with_copied_ami",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/public_12"
            },
            {
                "check_id": "CKV_AWS_46",
                "bc_check_id": "BC_AWS_SECRETS_1",
                "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "user_data"
                    ]
                },
                "code_block": [
                    [
                        93,
                        "resource \"aws_instance\" \"example_with_ami_from_instance\" {\n"
                    ],
                    [
                        94,
                        "  ami = aws_ami_from_instance.example.id\n"
                    ],
                    [
                        95,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        96,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    93,
                    96
                ],
                "resource": "aws_instance.example_with_ami_from_instance",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
            },
            {
                "check_id": "CKV_AWS_88",
                "bc_check_id": "BC_AWS_PUBLIC_12",
                "check_name": "EC2 instance should not have public IP.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        93,
                        "resource \"aws_instance\" \"example_with_ami_from_instance\" {\n"
                    ],
                    [
                        94,
                        "  ami = aws_ami_from_instance.example.id\n"
                    ],
                    [
                        95,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        96,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    93,
                    96
                ],
                "resource": "aws_instance.example_with_ami_from_instance",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/public_12"
            },
            {
                "check_id": "CKV_AWS_46",
                "bc_check_id": "BC_AWS_SECRETS_1",
                "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "user_data"
                    ]
                },
                "code_block": [
                    [
                        98,
                        "resource \"aws_instance\" \"public-ubuntu-from-data\" {\n"
                    ],
                    [
                        99,
                        "  ami           = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        100,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        101,
                        "  \n"
                    ],
                    [
                        102,
                        "  tags = {\n"
                    ],
                    [
                        103,
                        "    Name = \"public-ubuntu-from-data\"\n"
                    ],
                    [
                        104,
                        "  }\n"
                    ],
                    [
                        105,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    98,
                    105
                ],
                "resource": "aws_instance.public-ubuntu-from-data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "public-ubuntu-from-data"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_secrets_1"
            },
            {
                "check_id": "CKV_AWS_88",
                "bc_check_id": "BC_AWS_PUBLIC_12",
                "check_name": "EC2 instance should not have public IP.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        98,
                        "resource \"aws_instance\" \"public-ubuntu-from-data\" {\n"
                    ],
                    [
                        99,
                        "  ami           = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        100,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        101,
                        "  \n"
                    ],
                    [
                        102,
                        "  tags = {\n"
                    ],
                    [
                        103,
                        "    Name = \"public-ubuntu-from-data\"\n"
                    ],
                    [
                        104,
                        "  }\n"
                    ],
                    [
                        105,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    98,
                    105
                ],
                "resource": "aws_instance.public-ubuntu-from-data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "public-ubuntu-from-data"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/public_12"
            },
            {
                "check_id": "CKV2_AWS_20",
                "bc_check_id": "BC_AWS_NETWORKING_49",
                "check_name": "Ensure that ALB redirects HTTP requests into HTTPS ones",
                "check_result": {
                    "result": "PASSED",
                    "entity": {
                        "aws_lb": {
                            "default": {
                                "internal": [
                                    false
                                ],
                                "load_balancer_type": [
                                    "application"
                                ],
                                "name": [
                                    "alb"
                                ],
                                "subnets": [
                                    "module.vpc.public_subnets"
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_lb\" \"default\" {\n"
                    ],
                    [
                        26,
                        "  internal           = false\n"
                    ],
                    [
                        27,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        28,
                        "  name               = \"alb\"\n"
                    ],
                    [
                        29,
                        "  subnets            = module.vpc.public_subnets\n"
                    ],
                    [
                        30,
                        "}\n"
                    ]
                ],
                "file_path": "/alb_drop_http_headers/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/alb_drop_http_headers/main.tf",
                "repo_file_path": "/alb_drop_http_headers/main.tf",
                "file_line_range": [
                    25,
                    30
                ],
                "resource": "aws_lb.default",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {},
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-alb-redirects-http-requests-into-https-ones"
            },
            {
                "check_id": "CKV2_AWS_20",
                "bc_check_id": "BC_AWS_NETWORKING_49",
                "check_name": "Ensure that ALB redirects HTTP requests into HTTPS ones",
                "check_result": {
                    "result": "PASSED",
                    "entity": {
                        "aws_lb": {
                            "disabled": {
                                "drop_invalid_header_fields": [
                                    false
                                ],
                                "internal": [
                                    false
                                ],
                                "load_balancer_type": [
                                    "application"
                                ],
                                "name": [
                                    "alb"
                                ],
                                "subnets": [
                                    "module.vpc.public_subnets"
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_lb\" \"disabled\" {\n"
                    ],
                    [
                        40,
                        "  internal           = false\n"
                    ],
                    [
                        41,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        42,
                        "  name               = \"alb\"\n"
                    ],
                    [
                        43,
                        "  subnets            = module.vpc.public_subnets\n"
                    ],
                    [
                        44,
                        "\n"
                    ],
                    [
                        45,
                        "  drop_invalid_header_fields = false\n"
                    ],
                    [
                        46,
                        "}\n"
                    ]
                ],
                "file_path": "/alb_drop_http_headers/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/alb_drop_http_headers/main.tf",
                "repo_file_path": "/alb_drop_http_headers/main.tf",
                "file_line_range": [
                    39,
                    46
                ],
                "resource": "aws_lb.disabled",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {},
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-alb-redirects-http-requests-into-https-ones"
            },
            {
                "check_id": "CKV2_AWS_2",
                "bc_check_id": "BC_AWS_GENERAL_60",
                "check_name": "Ensure that only encrypted EBS volumes are attached to EC2 instances",
                "check_result": {
                    "result": "PASSED",
                    "entity": {
                        "aws_ebs_volume": {
                            "example": {
                                "availability_zone": [
                                    "data.aws_availability_zones.available.names[0]"
                                ],
                                "size": [
                                    40
                                ],
                                "tags": [
                                    {
                                        "Name": "HelloWorld"
                                    }
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        15,
                        "resource \"aws_ebs_volume\" \"example\" {\n"
                    ],
                    [
                        16,
                        "  availability_zone = data.aws_availability_zones.available.names[0]\n"
                    ],
                    [
                        17,
                        "  size              = 40\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  tags = {\n"
                    ],
                    [
                        20,
                        "    Name = \"HelloWorld\"\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    15,
                    22
                ],
                "resource": "aws_ebs_volume.example",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "HelloWorld"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-only-encrypted-ebs-volumes-are-attached-to-ec2-instances"
            },
            {
                "check_id": "CKV2_AWS_5",
                "bc_check_id": "BC_AWS_NETWORKING_51",
                "check_name": "Ensure that Security Groups are attached to an other resource",
                "check_result": {
                    "result": "PASSED",
                    "entity": {
                        "aws_security_group": {
                            "default": {
                                "egress": [
                                    {
                                        "cidr_blocks": [
                                            [
                                                "0.0.0.0/0"
                                            ]
                                        ],
                                        "description": [
                                            "this is an egress rule for something else...."
                                        ],
                                        "from_port": [
                                            0
                                        ],
                                        "protocol": [
                                            "-1"
                                        ],
                                        "to_port": [
                                            0
                                        ]
                                    }
                                ],
                                "ingress": [
                                    {
                                        "cidr_blocks": [
                                            [
                                                "10.0.0.0/24"
                                            ]
                                        ],
                                        "description": [
                                            "This is an inbound rule for something...."
                                        ],
                                        "from_port": [
                                            443
                                        ],
                                        "protocol": [
                                            "tcp"
                                        ],
                                        "to_port": [
                                            443
                                        ]
                                    }
                                ],
                                "name": [
                                    "examplerulename"
                                ],
                                "tags": [
                                    {
                                        "Name": "example_rule_with_descriptions"
                                    }
                                ],
                                "vpc_id": [
                                    "aws_vpc.vpc.id"
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        15,
                        "resource \"aws_security_group\" \"default\" {\n"
                    ],
                    [
                        16,
                        "  name        = \"examplerulename\"\n"
                    ],
                    [
                        17,
                        "  vpc_id      = aws_vpc.vpc.id\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  ingress {\n"
                    ],
                    [
                        20,
                        "    description = \"This is an inbound rule for something....\"\n"
                    ],
                    [
                        21,
                        "    from_port   = 443\n"
                    ],
                    [
                        22,
                        "    to_port     = 443\n"
                    ],
                    [
                        23,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        24,
                        "    cidr_blocks = [\"10.0.0.0/24\"]\n"
                    ],
                    [
                        25,
                        "  }\n"
                    ],
                    [
                        26,
                        "\n"
                    ],
                    [
                        27,
                        "  egress {\n"
                    ],
                    [
                        28,
                        "    description = \"this is an egress rule for something else....\"\n"
                    ],
                    [
                        29,
                        "    from_port   = 0\n"
                    ],
                    [
                        30,
                        "    to_port     = 0\n"
                    ],
                    [
                        31,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        32,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        33,
                        "  }\n"
                    ],
                    [
                        34,
                        "\n"
                    ],
                    [
                        35,
                        "  tags = {\n"
                    ],
                    [
                        36,
                        "    Name = \"example_rule_with_descriptions\"\n"
                    ],
                    [
                        37,
                        "  }\n"
                    ],
                    [
                        38,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                "repo_file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_line_range": [
                    15,
                    38
                ],
                "resource": "aws_security_group.default",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "example_rule_with_descriptions"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis"
            }
        ],
        "failed_checks": [
            {
                "check_id": "CKV_AWS_131",
                "bc_check_id": "BC_AWS_NETWORKING_41",
                "check_name": "Ensure that ALB drops HTTP headers",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "drop_invalid_header_fields"
                    ]
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_lb\" \"default\" {\n"
                    ],
                    [
                        26,
                        "  internal           = false\n"
                    ],
                    [
                        27,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        28,
                        "  name               = \"alb\"\n"
                    ],
                    [
                        29,
                        "  subnets            = module.vpc.public_subnets\n"
                    ],
                    [
                        30,
                        "}\n"
                    ]
                ],
                "file_path": "/alb_drop_http_headers/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/alb_drop_http_headers/main.tf",
                "repo_file_path": "/alb_drop_http_headers/main.tf",
                "file_line_range": [
                    25,
                    30
                ],
                "resource": "aws_lb.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ALBDropHttpHeaders",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-alb-drops-http-headers"
            },
            {
                "check_id": "CKV_AWS_91",
                "bc_check_id": "BC_AWS_LOGGING_22",
                "check_name": "Ensure the ELBv2 (Application/Network) has access logging enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "access_logs/0/enabled/0"
                    ]
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_lb\" \"default\" {\n"
                    ],
                    [
                        26,
                        "  internal           = false\n"
                    ],
                    [
                        27,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        28,
                        "  name               = \"alb\"\n"
                    ],
                    [
                        29,
                        "  subnets            = module.vpc.public_subnets\n"
                    ],
                    [
                        30,
                        "}\n"
                    ]
                ],
                "file_path": "/alb_drop_http_headers/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/alb_drop_http_headers/main.tf",
                "repo_file_path": "/alb_drop_http_headers/main.tf",
                "file_line_range": [
                    25,
                    30
                ],
                "resource": "aws_lb.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ELBv2AccessLogs",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_22"
            },
            {
                "check_id": "CKV_AWS_150",
                "bc_check_id": null,
                "check_name": "Ensure that Load Balancer has deletion protection enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "enable_deletion_protection"
                    ]
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_lb\" \"default\" {\n"
                    ],
                    [
                        26,
                        "  internal           = false\n"
                    ],
                    [
                        27,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        28,
                        "  name               = \"alb\"\n"
                    ],
                    [
                        29,
                        "  subnets            = module.vpc.public_subnets\n"
                    ],
                    [
                        30,
                        "}\n"
                    ]
                ],
                "file_path": "/alb_drop_http_headers/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/alb_drop_http_headers/main.tf",
                "repo_file_path": "/alb_drop_http_headers/main.tf",
                "file_line_range": [
                    25,
                    30
                ],
                "resource": "aws_lb.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LBDeletionProtection",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_131",
                "bc_check_id": "BC_AWS_NETWORKING_41",
                "check_name": "Ensure that ALB drops HTTP headers",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "drop_invalid_header_fields"
                    ]
                },
                "code_block": [
                    [
                        32,
                        "resource \"aws_alb\" \"default\" {\n"
                    ],
                    [
                        33,
                        "  internal           = false\n"
                    ],
                    [
                        34,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        35,
                        "  name               = \"alb\"\n"
                    ],
                    [
                        36,
                        "  subnets            = module.vpc.public_subnets\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/alb_drop_http_headers/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/alb_drop_http_headers/main.tf",
                "repo_file_path": "/alb_drop_http_headers/main.tf",
                "file_line_range": [
                    32,
                    37
                ],
                "resource": "aws_alb.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ALBDropHttpHeaders",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-alb-drops-http-headers"
            },
            {
                "check_id": "CKV_AWS_91",
                "bc_check_id": "BC_AWS_LOGGING_22",
                "check_name": "Ensure the ELBv2 (Application/Network) has access logging enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "access_logs/0/enabled/0"
                    ]
                },
                "code_block": [
                    [
                        32,
                        "resource \"aws_alb\" \"default\" {\n"
                    ],
                    [
                        33,
                        "  internal           = false\n"
                    ],
                    [
                        34,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        35,
                        "  name               = \"alb\"\n"
                    ],
                    [
                        36,
                        "  subnets            = module.vpc.public_subnets\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/alb_drop_http_headers/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/alb_drop_http_headers/main.tf",
                "repo_file_path": "/alb_drop_http_headers/main.tf",
                "file_line_range": [
                    32,
                    37
                ],
                "resource": "aws_alb.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ELBv2AccessLogs",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_22"
            },
            {
                "check_id": "CKV_AWS_150",
                "bc_check_id": null,
                "check_name": "Ensure that Load Balancer has deletion protection enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "enable_deletion_protection"
                    ]
                },
                "code_block": [
                    [
                        32,
                        "resource \"aws_alb\" \"default\" {\n"
                    ],
                    [
                        33,
                        "  internal           = false\n"
                    ],
                    [
                        34,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        35,
                        "  name               = \"alb\"\n"
                    ],
                    [
                        36,
                        "  subnets            = module.vpc.public_subnets\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/alb_drop_http_headers/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/alb_drop_http_headers/main.tf",
                "repo_file_path": "/alb_drop_http_headers/main.tf",
                "file_line_range": [
                    32,
                    37
                ],
                "resource": "aws_alb.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LBDeletionProtection",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_131",
                "bc_check_id": "BC_AWS_NETWORKING_41",
                "check_name": "Ensure that ALB drops HTTP headers",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "drop_invalid_header_fields"
                    ]
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_lb\" \"disabled\" {\n"
                    ],
                    [
                        40,
                        "  internal           = false\n"
                    ],
                    [
                        41,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        42,
                        "  name               = \"alb\"\n"
                    ],
                    [
                        43,
                        "  subnets            = module.vpc.public_subnets\n"
                    ],
                    [
                        44,
                        "\n"
                    ],
                    [
                        45,
                        "  drop_invalid_header_fields = false\n"
                    ],
                    [
                        46,
                        "}\n"
                    ]
                ],
                "file_path": "/alb_drop_http_headers/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/alb_drop_http_headers/main.tf",
                "repo_file_path": "/alb_drop_http_headers/main.tf",
                "file_line_range": [
                    39,
                    46
                ],
                "resource": "aws_lb.disabled",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ALBDropHttpHeaders",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-alb-drops-http-headers"
            },
            {
                "check_id": "CKV_AWS_91",
                "bc_check_id": "BC_AWS_LOGGING_22",
                "check_name": "Ensure the ELBv2 (Application/Network) has access logging enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "access_logs/0/enabled/0"
                    ]
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_lb\" \"disabled\" {\n"
                    ],
                    [
                        40,
                        "  internal           = false\n"
                    ],
                    [
                        41,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        42,
                        "  name               = \"alb\"\n"
                    ],
                    [
                        43,
                        "  subnets            = module.vpc.public_subnets\n"
                    ],
                    [
                        44,
                        "\n"
                    ],
                    [
                        45,
                        "  drop_invalid_header_fields = false\n"
                    ],
                    [
                        46,
                        "}\n"
                    ]
                ],
                "file_path": "/alb_drop_http_headers/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/alb_drop_http_headers/main.tf",
                "repo_file_path": "/alb_drop_http_headers/main.tf",
                "file_line_range": [
                    39,
                    46
                ],
                "resource": "aws_lb.disabled",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ELBv2AccessLogs",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_22"
            },
            {
                "check_id": "CKV_AWS_150",
                "bc_check_id": null,
                "check_name": "Ensure that Load Balancer has deletion protection enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "enable_deletion_protection"
                    ]
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_lb\" \"disabled\" {\n"
                    ],
                    [
                        40,
                        "  internal           = false\n"
                    ],
                    [
                        41,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        42,
                        "  name               = \"alb\"\n"
                    ],
                    [
                        43,
                        "  subnets            = module.vpc.public_subnets\n"
                    ],
                    [
                        44,
                        "\n"
                    ],
                    [
                        45,
                        "  drop_invalid_header_fields = false\n"
                    ],
                    [
                        46,
                        "}\n"
                    ]
                ],
                "file_path": "/alb_drop_http_headers/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/alb_drop_http_headers/main.tf",
                "repo_file_path": "/alb_drop_http_headers/main.tf",
                "file_line_range": [
                    39,
                    46
                ],
                "resource": "aws_lb.disabled",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LBDeletionProtection",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_131",
                "bc_check_id": "BC_AWS_NETWORKING_41",
                "check_name": "Ensure that ALB drops HTTP headers",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "drop_invalid_header_fields"
                    ]
                },
                "code_block": [
                    [
                        48,
                        "resource \"aws_alb\" \"disabled\" {\n"
                    ],
                    [
                        49,
                        "  internal           = false\n"
                    ],
                    [
                        50,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        51,
                        "  name               = \"alb\"\n"
                    ],
                    [
                        52,
                        "  subnets            = module.vpc.public_subnets\n"
                    ],
                    [
                        53,
                        "\n"
                    ],
                    [
                        54,
                        "  drop_invalid_header_fields = false\n"
                    ],
                    [
                        55,
                        "}\n"
                    ]
                ],
                "file_path": "/alb_drop_http_headers/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/alb_drop_http_headers/main.tf",
                "repo_file_path": "/alb_drop_http_headers/main.tf",
                "file_line_range": [
                    48,
                    55
                ],
                "resource": "aws_alb.disabled",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ALBDropHttpHeaders",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-alb-drops-http-headers"
            },
            {
                "check_id": "CKV_AWS_91",
                "bc_check_id": "BC_AWS_LOGGING_22",
                "check_name": "Ensure the ELBv2 (Application/Network) has access logging enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "access_logs/0/enabled/0"
                    ]
                },
                "code_block": [
                    [
                        48,
                        "resource \"aws_alb\" \"disabled\" {\n"
                    ],
                    [
                        49,
                        "  internal           = false\n"
                    ],
                    [
                        50,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        51,
                        "  name               = \"alb\"\n"
                    ],
                    [
                        52,
                        "  subnets            = module.vpc.public_subnets\n"
                    ],
                    [
                        53,
                        "\n"
                    ],
                    [
                        54,
                        "  drop_invalid_header_fields = false\n"
                    ],
                    [
                        55,
                        "}\n"
                    ]
                ],
                "file_path": "/alb_drop_http_headers/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/alb_drop_http_headers/main.tf",
                "repo_file_path": "/alb_drop_http_headers/main.tf",
                "file_line_range": [
                    48,
                    55
                ],
                "resource": "aws_alb.disabled",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ELBv2AccessLogs",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_22"
            },
            {
                "check_id": "CKV_AWS_150",
                "bc_check_id": null,
                "check_name": "Ensure that Load Balancer has deletion protection enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "enable_deletion_protection"
                    ]
                },
                "code_block": [
                    [
                        48,
                        "resource \"aws_alb\" \"disabled\" {\n"
                    ],
                    [
                        49,
                        "  internal           = false\n"
                    ],
                    [
                        50,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        51,
                        "  name               = \"alb\"\n"
                    ],
                    [
                        52,
                        "  subnets            = module.vpc.public_subnets\n"
                    ],
                    [
                        53,
                        "\n"
                    ],
                    [
                        54,
                        "  drop_invalid_header_fields = false\n"
                    ],
                    [
                        55,
                        "}\n"
                    ]
                ],
                "file_path": "/alb_drop_http_headers/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/alb_drop_http_headers/main.tf",
                "repo_file_path": "/alb_drop_http_headers/main.tf",
                "file_line_range": [
                    48,
                    55
                ],
                "resource": "aws_alb.disabled",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LBDeletionProtection",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null
            },
            {
                "check_id": "CKV_AWS_18",
                "bc_check_id": "BC_AWS_S3_13",
                "check_name": "Ensure the S3 bucket has access logging enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "logging"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"b\" {\n"
                    ],
                    [
                        2,
                        "  bucket = \"mybucket\"\n"
                    ],
                    [
                        3,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  tags = {\n"
                    ],
                    [
                        6,
                        "    Name = \"My bucket\"\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudfront_not_using_waf/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                "repo_file_path": "/cloudfront_not_using_waf/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_s3_bucket.b",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "My bucket"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
            },
            {
                "check_id": "CKV_AWS_144",
                "bc_check_id": "BC_AWS_GENERAL_72",
                "check_name": "Ensure that S3 bucket has cross-region replication enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "replication_configuration/[0]/role"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"b\" {\n"
                    ],
                    [
                        2,
                        "  bucket = \"mybucket\"\n"
                    ],
                    [
                        3,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  tags = {\n"
                    ],
                    [
                        6,
                        "    Name = \"My bucket\"\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudfront_not_using_waf/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                "repo_file_path": "/cloudfront_not_using_waf/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_s3_bucket.b",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3BucketReplicationConfiguration",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "My bucket"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled"
            },
            {
                "check_id": "CKV_AWS_19",
                "bc_check_id": "BC_AWS_S3_14",
                "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"b\" {\n"
                    ],
                    [
                        2,
                        "  bucket = \"mybucket\"\n"
                    ],
                    [
                        3,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  tags = {\n"
                    ],
                    [
                        6,
                        "    Name = \"My bucket\"\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudfront_not_using_waf/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                "repo_file_path": "/cloudfront_not_using_waf/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_s3_bucket.b",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "My bucket"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
            },
            {
                "check_id": "CKV_AWS_145",
                "bc_check_id": "BC_AWS_GENERAL_56",
                "check_name": "Ensure that S3 buckets are encrypted with KMS by default",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"b\" {\n"
                    ],
                    [
                        2,
                        "  bucket = \"mybucket\"\n"
                    ],
                    [
                        3,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  tags = {\n"
                    ],
                    [
                        6,
                        "    Name = \"My bucket\"\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudfront_not_using_waf/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                "repo_file_path": "/cloudfront_not_using_waf/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_s3_bucket.b",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3KMSEncryptedByDefault",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "My bucket"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default"
            },
            {
                "check_id": "CKV_AWS_21",
                "bc_check_id": "BC_AWS_S3_16",
                "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "versioning/[0]/enabled"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"b\" {\n"
                    ],
                    [
                        2,
                        "  bucket = \"mybucket\"\n"
                    ],
                    [
                        3,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  tags = {\n"
                    ],
                    [
                        6,
                        "    Name = \"My bucket\"\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudfront_not_using_waf/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                "repo_file_path": "/cloudfront_not_using_waf/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_s3_bucket.b",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "My bucket"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
            },
            {
                "check_id": "CKV_AWS_34",
                "bc_check_id": "BC_AWS_NETWORKING_32",
                "check_name": "Ensure cloudfront distribution ViewerProtocolPolicy is set to HTTPS",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "default_cache_behavior/[0]/viewer_protocol_policy"
                    ]
                },
                "code_block": [
                    [
                        14,
                        "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                    ],
                    [
                        15,
                        "  origin {\n"
                    ],
                    [
                        16,
                        "    domain_name = aws_s3_bucket.b.bucket_regional_domain_name\n"
                    ],
                    [
                        17,
                        "    origin_id   = local.s3_origin_id\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "    s3_origin_config {\n"
                    ],
                    [
                        20,
                        "      origin_access_identity = \"origin-access-identity/cloudfront/ABCDEFG1234567\"\n"
                    ],
                    [
                        21,
                        "    }\n"
                    ],
                    [
                        22,
                        "  }\n"
                    ],
                    [
                        23,
                        "\n"
                    ],
                    [
                        24,
                        "  enabled             = true\n"
                    ],
                    [
                        25,
                        "  is_ipv6_enabled     = true\n"
                    ],
                    [
                        26,
                        "  comment             = \"Some comment\"\n"
                    ],
                    [
                        27,
                        "  default_root_object = \"index.html\"\n"
                    ],
                    [
                        28,
                        "\n"
                    ],
                    [
                        29,
                        "  logging_config {\n"
                    ],
                    [
                        30,
                        "    include_cookies = false\n"
                    ],
                    [
                        31,
                        "    bucket          = \"mylogs.s3.amazonaws.com\"\n"
                    ],
                    [
                        32,
                        "    prefix          = \"myprefix\"\n"
                    ],
                    [
                        33,
                        "  }\n"
                    ],
                    [
                        34,
                        "\n"
                    ],
                    [
                        35,
                        "  aliases = [\"mysite.example.com\", \"yoursite.example.com\"]\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "  default_cache_behavior {\n"
                    ],
                    [
                        38,
                        "    allowed_methods  = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"]\n"
                    ],
                    [
                        39,
                        "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                    ],
                    [
                        40,
                        "    target_origin_id = local.s3_origin_id\n"
                    ],
                    [
                        41,
                        "\n"
                    ],
                    [
                        42,
                        "    forwarded_values {\n"
                    ],
                    [
                        43,
                        "      query_string = false\n"
                    ],
                    [
                        44,
                        "\n"
                    ],
                    [
                        45,
                        "      cookies {\n"
                    ],
                    [
                        46,
                        "        forward = \"none\"\n"
                    ],
                    [
                        47,
                        "      }\n"
                    ],
                    [
                        48,
                        "    }\n"
                    ],
                    [
                        49,
                        "\n"
                    ],
                    [
                        50,
                        "    viewer_protocol_policy = \"allow-all\"\n"
                    ],
                    [
                        51,
                        "    min_ttl                = 0\n"
                    ],
                    [
                        52,
                        "    default_ttl            = 3600\n"
                    ],
                    [
                        53,
                        "    max_ttl                = 86400\n"
                    ],
                    [
                        54,
                        "  }\n"
                    ],
                    [
                        55,
                        "\n"
                    ],
                    [
                        56,
                        "  # Cache behavior with precedence 0\n"
                    ],
                    [
                        57,
                        "  ordered_cache_behavior {\n"
                    ],
                    [
                        58,
                        "    path_pattern     = \"/content/immutable/*\"\n"
                    ],
                    [
                        59,
                        "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                    ],
                    [
                        60,
                        "    cached_methods   = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                    ],
                    [
                        61,
                        "    target_origin_id = local.s3_origin_id\n"
                    ],
                    [
                        62,
                        "\n"
                    ],
                    [
                        63,
                        "    forwarded_values {\n"
                    ],
                    [
                        64,
                        "      query_string = false\n"
                    ],
                    [
                        65,
                        "      headers      = [\"Origin\"]\n"
                    ],
                    [
                        66,
                        "\n"
                    ],
                    [
                        67,
                        "      cookies {\n"
                    ],
                    [
                        68,
                        "        forward = \"none\"\n"
                    ],
                    [
                        69,
                        "      }\n"
                    ],
                    [
                        70,
                        "    }\n"
                    ],
                    [
                        71,
                        "\n"
                    ],
                    [
                        72,
                        "    min_ttl                = 0\n"
                    ],
                    [
                        73,
                        "    default_ttl            = 86400\n"
                    ],
                    [
                        74,
                        "    max_ttl                = 31536000\n"
                    ],
                    [
                        75,
                        "    compress               = true\n"
                    ],
                    [
                        76,
                        "    viewer_protocol_policy = \"redirect-to-https\"\n"
                    ],
                    [
                        77,
                        "  }\n"
                    ],
                    [
                        78,
                        "\n"
                    ],
                    [
                        79,
                        "  # Cache behavior with precedence 1\n"
                    ],
                    [
                        80,
                        "  ordered_cache_behavior {\n"
                    ],
                    [
                        81,
                        "    path_pattern     = \"/content/*\"\n"
                    ],
                    [
                        82,
                        "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                    ],
                    [
                        83,
                        "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                    ],
                    [
                        84,
                        "    target_origin_id = local.s3_origin_id\n"
                    ],
                    [
                        85,
                        "\n"
                    ],
                    [
                        86,
                        "    forwarded_values {\n"
                    ],
                    [
                        87,
                        "      query_string = false\n"
                    ],
                    [
                        88,
                        "\n"
                    ],
                    [
                        89,
                        "      cookies {\n"
                    ],
                    [
                        90,
                        "        forward = \"none\"\n"
                    ],
                    [
                        91,
                        "      }\n"
                    ],
                    [
                        92,
                        "    }\n"
                    ],
                    [
                        93,
                        "\n"
                    ],
                    [
                        94,
                        "    min_ttl                = 0\n"
                    ],
                    [
                        95,
                        "    default_ttl            = 3600\n"
                    ],
                    [
                        96,
                        "    max_ttl                = 86400\n"
                    ],
                    [
                        97,
                        "    compress               = true\n"
                    ],
                    [
                        98,
                        "    viewer_protocol_policy = \"redirect-to-https\"\n"
                    ],
                    [
                        99,
                        "  }\n"
                    ],
                    [
                        100,
                        "\n"
                    ],
                    [
                        101,
                        "  price_class = \"PriceClass_200\"\n"
                    ],
                    [
                        102,
                        "\n"
                    ],
                    [
                        103,
                        "  restrictions {\n"
                    ],
                    [
                        104,
                        "    geo_restriction {\n"
                    ],
                    [
                        105,
                        "      restriction_type = \"whitelist\"\n"
                    ],
                    [
                        106,
                        "      locations        = [\"US\", \"CA\", \"GB\", \"DE\"]\n"
                    ],
                    [
                        107,
                        "    }\n"
                    ],
                    [
                        108,
                        "  }\n"
                    ],
                    [
                        109,
                        "\n"
                    ],
                    [
                        110,
                        "  tags = {\n"
                    ],
                    [
                        111,
                        "    Environment = \"production\"\n"
                    ],
                    [
                        112,
                        "  }\n"
                    ],
                    [
                        113,
                        "\n"
                    ],
                    [
                        114,
                        "  viewer_certificate {\n"
                    ],
                    [
                        115,
                        "    cloudfront_default_certificate = true\n"
                    ],
                    [
                        116,
                        "  }\n"
                    ],
                    [
                        117,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudfront_not_using_waf/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                "repo_file_path": "/cloudfront_not_using_waf/main.tf",
                "file_line_range": [
                    14,
                    117
                ],
                "resource": "aws_cloudfront_distribution.s3_distribution",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.CloudfrontDistributionEncryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Environment": "production"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "breadcrumbs": {
                    "default_cache_behavior.target_origin_id": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ],
                    "ordered_cache_behavior.0.target_origin_id": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ],
                    "ordered_cache_behavior.0": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ],
                    "ordered_cache_behavior.1.target_origin_id": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ],
                    "ordered_cache_behavior.1": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ],
                    "origin.origin_id": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ]
                },
                "guideline": "https://docs.bridgecrew.io/docs/networking_32"
            },
            {
                "check_id": "CKV_AWS_68",
                "bc_check_id": "BC_AWS_GENERAL_27",
                "check_name": "CloudFront Distribution should have WAF enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "web_acl_id"
                    ]
                },
                "code_block": [
                    [
                        14,
                        "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {\n"
                    ],
                    [
                        15,
                        "  origin {\n"
                    ],
                    [
                        16,
                        "    domain_name = aws_s3_bucket.b.bucket_regional_domain_name\n"
                    ],
                    [
                        17,
                        "    origin_id   = local.s3_origin_id\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "    s3_origin_config {\n"
                    ],
                    [
                        20,
                        "      origin_access_identity = \"origin-access-identity/cloudfront/ABCDEFG1234567\"\n"
                    ],
                    [
                        21,
                        "    }\n"
                    ],
                    [
                        22,
                        "  }\n"
                    ],
                    [
                        23,
                        "\n"
                    ],
                    [
                        24,
                        "  enabled             = true\n"
                    ],
                    [
                        25,
                        "  is_ipv6_enabled     = true\n"
                    ],
                    [
                        26,
                        "  comment             = \"Some comment\"\n"
                    ],
                    [
                        27,
                        "  default_root_object = \"index.html\"\n"
                    ],
                    [
                        28,
                        "\n"
                    ],
                    [
                        29,
                        "  logging_config {\n"
                    ],
                    [
                        30,
                        "    include_cookies = false\n"
                    ],
                    [
                        31,
                        "    bucket          = \"mylogs.s3.amazonaws.com\"\n"
                    ],
                    [
                        32,
                        "    prefix          = \"myprefix\"\n"
                    ],
                    [
                        33,
                        "  }\n"
                    ],
                    [
                        34,
                        "\n"
                    ],
                    [
                        35,
                        "  aliases = [\"mysite.example.com\", \"yoursite.example.com\"]\n"
                    ],
                    [
                        36,
                        "\n"
                    ],
                    [
                        37,
                        "  default_cache_behavior {\n"
                    ],
                    [
                        38,
                        "    allowed_methods  = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"]\n"
                    ],
                    [
                        39,
                        "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                    ],
                    [
                        40,
                        "    target_origin_id = local.s3_origin_id\n"
                    ],
                    [
                        41,
                        "\n"
                    ],
                    [
                        42,
                        "    forwarded_values {\n"
                    ],
                    [
                        43,
                        "      query_string = false\n"
                    ],
                    [
                        44,
                        "\n"
                    ],
                    [
                        45,
                        "      cookies {\n"
                    ],
                    [
                        46,
                        "        forward = \"none\"\n"
                    ],
                    [
                        47,
                        "      }\n"
                    ],
                    [
                        48,
                        "    }\n"
                    ],
                    [
                        49,
                        "\n"
                    ],
                    [
                        50,
                        "    viewer_protocol_policy = \"allow-all\"\n"
                    ],
                    [
                        51,
                        "    min_ttl                = 0\n"
                    ],
                    [
                        52,
                        "    default_ttl            = 3600\n"
                    ],
                    [
                        53,
                        "    max_ttl                = 86400\n"
                    ],
                    [
                        54,
                        "  }\n"
                    ],
                    [
                        55,
                        "\n"
                    ],
                    [
                        56,
                        "  # Cache behavior with precedence 0\n"
                    ],
                    [
                        57,
                        "  ordered_cache_behavior {\n"
                    ],
                    [
                        58,
                        "    path_pattern     = \"/content/immutable/*\"\n"
                    ],
                    [
                        59,
                        "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                    ],
                    [
                        60,
                        "    cached_methods   = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                    ],
                    [
                        61,
                        "    target_origin_id = local.s3_origin_id\n"
                    ],
                    [
                        62,
                        "\n"
                    ],
                    [
                        63,
                        "    forwarded_values {\n"
                    ],
                    [
                        64,
                        "      query_string = false\n"
                    ],
                    [
                        65,
                        "      headers      = [\"Origin\"]\n"
                    ],
                    [
                        66,
                        "\n"
                    ],
                    [
                        67,
                        "      cookies {\n"
                    ],
                    [
                        68,
                        "        forward = \"none\"\n"
                    ],
                    [
                        69,
                        "      }\n"
                    ],
                    [
                        70,
                        "    }\n"
                    ],
                    [
                        71,
                        "\n"
                    ],
                    [
                        72,
                        "    min_ttl                = 0\n"
                    ],
                    [
                        73,
                        "    default_ttl            = 86400\n"
                    ],
                    [
                        74,
                        "    max_ttl                = 31536000\n"
                    ],
                    [
                        75,
                        "    compress               = true\n"
                    ],
                    [
                        76,
                        "    viewer_protocol_policy = \"redirect-to-https\"\n"
                    ],
                    [
                        77,
                        "  }\n"
                    ],
                    [
                        78,
                        "\n"
                    ],
                    [
                        79,
                        "  # Cache behavior with precedence 1\n"
                    ],
                    [
                        80,
                        "  ordered_cache_behavior {\n"
                    ],
                    [
                        81,
                        "    path_pattern     = \"/content/*\"\n"
                    ],
                    [
                        82,
                        "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]\n"
                    ],
                    [
                        83,
                        "    cached_methods   = [\"GET\", \"HEAD\"]\n"
                    ],
                    [
                        84,
                        "    target_origin_id = local.s3_origin_id\n"
                    ],
                    [
                        85,
                        "\n"
                    ],
                    [
                        86,
                        "    forwarded_values {\n"
                    ],
                    [
                        87,
                        "      query_string = false\n"
                    ],
                    [
                        88,
                        "\n"
                    ],
                    [
                        89,
                        "      cookies {\n"
                    ],
                    [
                        90,
                        "        forward = \"none\"\n"
                    ],
                    [
                        91,
                        "      }\n"
                    ],
                    [
                        92,
                        "    }\n"
                    ],
                    [
                        93,
                        "\n"
                    ],
                    [
                        94,
                        "    min_ttl                = 0\n"
                    ],
                    [
                        95,
                        "    default_ttl            = 3600\n"
                    ],
                    [
                        96,
                        "    max_ttl                = 86400\n"
                    ],
                    [
                        97,
                        "    compress               = true\n"
                    ],
                    [
                        98,
                        "    viewer_protocol_policy = \"redirect-to-https\"\n"
                    ],
                    [
                        99,
                        "  }\n"
                    ],
                    [
                        100,
                        "\n"
                    ],
                    [
                        101,
                        "  price_class = \"PriceClass_200\"\n"
                    ],
                    [
                        102,
                        "\n"
                    ],
                    [
                        103,
                        "  restrictions {\n"
                    ],
                    [
                        104,
                        "    geo_restriction {\n"
                    ],
                    [
                        105,
                        "      restriction_type = \"whitelist\"\n"
                    ],
                    [
                        106,
                        "      locations        = [\"US\", \"CA\", \"GB\", \"DE\"]\n"
                    ],
                    [
                        107,
                        "    }\n"
                    ],
                    [
                        108,
                        "  }\n"
                    ],
                    [
                        109,
                        "\n"
                    ],
                    [
                        110,
                        "  tags = {\n"
                    ],
                    [
                        111,
                        "    Environment = \"production\"\n"
                    ],
                    [
                        112,
                        "  }\n"
                    ],
                    [
                        113,
                        "\n"
                    ],
                    [
                        114,
                        "  viewer_certificate {\n"
                    ],
                    [
                        115,
                        "    cloudfront_default_certificate = true\n"
                    ],
                    [
                        116,
                        "  }\n"
                    ],
                    [
                        117,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudfront_not_using_waf/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                "repo_file_path": "/cloudfront_not_using_waf/main.tf",
                "file_line_range": [
                    14,
                    117
                ],
                "resource": "aws_cloudfront_distribution.s3_distribution",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.WAFEnabled",
                "fixed_definition": null,
                "entity_tags": {
                    "Environment": "production"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "breadcrumbs": {
                    "default_cache_behavior.target_origin_id": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ],
                    "ordered_cache_behavior.0.target_origin_id": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ],
                    "ordered_cache_behavior.0": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ],
                    "ordered_cache_behavior.1.target_origin_id": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ],
                    "ordered_cache_behavior.1": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ],
                    "origin.origin_id": [
                        {
                            "type": "locals",
                            "name": "s3_origin_id",
                            "path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                            "module_connection": false
                        }
                    ]
                },
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_27"
            },
            {
                "check_id": "CKV_AWS_35",
                "bc_check_id": "BC_AWS_LOGGING_7",
                "check_name": "Ensure CloudTrail logs are encrypted at rest using KMS CMKs",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "kms_key_id"
                    ]
                },
                "code_block": [
                    [
                        3,
                        "resource \"aws_cloudtrail\" \"foobar\" {\n"
                    ],
                    [
                        4,
                        "  name                          = \"tf-trail-foobar\"\n"
                    ],
                    [
                        5,
                        "  s3_bucket_name                = aws_s3_bucket.foo.id\n"
                    ],
                    [
                        6,
                        "  s3_key_prefix                 = \"prefix\"\n"
                    ],
                    [
                        7,
                        "  include_global_service_events = false\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudtrail_enabled_on_multi_region/main.tf",
                "repo_file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_line_range": [
                    3,
                    8
                ],
                "resource": "aws_cloudtrail.foobar",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.CloudtrailEncryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/logging_7"
            },
            {
                "check_id": "CKV_AWS_36",
                "bc_check_id": "BC_AWS_LOGGING_2",
                "check_name": "Ensure CloudTrail log file validation is enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "enable_log_file_validation"
                    ]
                },
                "code_block": [
                    [
                        3,
                        "resource \"aws_cloudtrail\" \"foobar\" {\n"
                    ],
                    [
                        4,
                        "  name                          = \"tf-trail-foobar\"\n"
                    ],
                    [
                        5,
                        "  s3_bucket_name                = aws_s3_bucket.foo.id\n"
                    ],
                    [
                        6,
                        "  s3_key_prefix                 = \"prefix\"\n"
                    ],
                    [
                        7,
                        "  include_global_service_events = false\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudtrail_enabled_on_multi_region/main.tf",
                "repo_file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_line_range": [
                    3,
                    8
                ],
                "resource": "aws_cloudtrail.foobar",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.CloudtrailLogValidation",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/logging_2"
            },
            {
                "check_id": "CKV_AWS_67",
                "bc_check_id": "BC_AWS_LOGGING_1",
                "check_name": "Ensure CloudTrail is enabled in all Regions",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "is_multi_region_trail"
                    ]
                },
                "code_block": [
                    [
                        3,
                        "resource \"aws_cloudtrail\" \"foobar\" {\n"
                    ],
                    [
                        4,
                        "  name                          = \"tf-trail-foobar\"\n"
                    ],
                    [
                        5,
                        "  s3_bucket_name                = aws_s3_bucket.foo.id\n"
                    ],
                    [
                        6,
                        "  s3_key_prefix                 = \"prefix\"\n"
                    ],
                    [
                        7,
                        "  include_global_service_events = false\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudtrail_enabled_on_multi_region/main.tf",
                "repo_file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_line_range": [
                    3,
                    8
                ],
                "resource": "aws_cloudtrail.foobar",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.CloudtrailMultiRegion",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/logging_1"
            },
            {
                "check_id": "CKV_AWS_18",
                "bc_check_id": "BC_AWS_S3_13",
                "check_name": "Ensure the S3 bucket has access logging enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "logging"
                    ]
                },
                "code_block": [
                    [
                        10,
                        "resource \"aws_s3_bucket\" \"foo\" {\n"
                    ],
                    [
                        11,
                        "  bucket        = \"tf-test-trail\"\n"
                    ],
                    [
                        12,
                        "  force_destroy = true\n"
                    ],
                    [
                        13,
                        "\n"
                    ],
                    [
                        14,
                        "  policy = <<POLICY\n"
                    ],
                    [
                        15,
                        "{\n"
                    ],
                    [
                        16,
                        "    \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        17,
                        "    \"Statement\": [\n"
                    ],
                    [
                        18,
                        "        {\n"
                    ],
                    [
                        19,
                        "            \"Sid\": \"AWSCloudTrailAclCheck\",\n"
                    ],
                    [
                        20,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        21,
                        "            \"Principal\": {\n"
                    ],
                    [
                        22,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        23,
                        "            },\n"
                    ],
                    [
                        24,
                        "            \"Action\": \"s3:GetBucketAcl\",\n"
                    ],
                    [
                        25,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail\"\n"
                    ],
                    [
                        26,
                        "        },\n"
                    ],
                    [
                        27,
                        "        {\n"
                    ],
                    [
                        28,
                        "            \"Sid\": \"AWSCloudTrailWrite\",\n"
                    ],
                    [
                        29,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        30,
                        "            \"Principal\": {\n"
                    ],
                    [
                        31,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        32,
                        "            },\n"
                    ],
                    [
                        33,
                        "            \"Action\": \"s3:PutObject\",\n"
                    ],
                    [
                        34,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail/prefix/AWSLogs/${data.aws_caller_identity.current.account_id}/*\",\n"
                    ],
                    [
                        35,
                        "            \"Condition\": {\n"
                    ],
                    [
                        36,
                        "                \"StringEquals\": {\n"
                    ],
                    [
                        37,
                        "                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n"
                    ],
                    [
                        38,
                        "                }\n"
                    ],
                    [
                        39,
                        "            }\n"
                    ],
                    [
                        40,
                        "        }\n"
                    ],
                    [
                        41,
                        "    ]\n"
                    ],
                    [
                        42,
                        "}\n"
                    ],
                    [
                        43,
                        "POLICY\n"
                    ],
                    [
                        44,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudtrail_enabled_on_multi_region/main.tf",
                "repo_file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_line_range": [
                    10,
                    44
                ],
                "resource": "aws_s3_bucket.foo",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3AccessLogs",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_13-enable-logging"
            },
            {
                "check_id": "CKV_AWS_144",
                "bc_check_id": "BC_AWS_GENERAL_72",
                "check_name": "Ensure that S3 bucket has cross-region replication enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "replication_configuration/[0]/role"
                    ]
                },
                "code_block": [
                    [
                        10,
                        "resource \"aws_s3_bucket\" \"foo\" {\n"
                    ],
                    [
                        11,
                        "  bucket        = \"tf-test-trail\"\n"
                    ],
                    [
                        12,
                        "  force_destroy = true\n"
                    ],
                    [
                        13,
                        "\n"
                    ],
                    [
                        14,
                        "  policy = <<POLICY\n"
                    ],
                    [
                        15,
                        "{\n"
                    ],
                    [
                        16,
                        "    \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        17,
                        "    \"Statement\": [\n"
                    ],
                    [
                        18,
                        "        {\n"
                    ],
                    [
                        19,
                        "            \"Sid\": \"AWSCloudTrailAclCheck\",\n"
                    ],
                    [
                        20,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        21,
                        "            \"Principal\": {\n"
                    ],
                    [
                        22,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        23,
                        "            },\n"
                    ],
                    [
                        24,
                        "            \"Action\": \"s3:GetBucketAcl\",\n"
                    ],
                    [
                        25,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail\"\n"
                    ],
                    [
                        26,
                        "        },\n"
                    ],
                    [
                        27,
                        "        {\n"
                    ],
                    [
                        28,
                        "            \"Sid\": \"AWSCloudTrailWrite\",\n"
                    ],
                    [
                        29,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        30,
                        "            \"Principal\": {\n"
                    ],
                    [
                        31,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        32,
                        "            },\n"
                    ],
                    [
                        33,
                        "            \"Action\": \"s3:PutObject\",\n"
                    ],
                    [
                        34,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail/prefix/AWSLogs/${data.aws_caller_identity.current.account_id}/*\",\n"
                    ],
                    [
                        35,
                        "            \"Condition\": {\n"
                    ],
                    [
                        36,
                        "                \"StringEquals\": {\n"
                    ],
                    [
                        37,
                        "                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n"
                    ],
                    [
                        38,
                        "                }\n"
                    ],
                    [
                        39,
                        "            }\n"
                    ],
                    [
                        40,
                        "        }\n"
                    ],
                    [
                        41,
                        "    ]\n"
                    ],
                    [
                        42,
                        "}\n"
                    ],
                    [
                        43,
                        "POLICY\n"
                    ],
                    [
                        44,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudtrail_enabled_on_multi_region/main.tf",
                "repo_file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_line_range": [
                    10,
                    44
                ],
                "resource": "aws_s3_bucket.foo",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3BucketReplicationConfiguration",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-bucket-has-cross-region-replication-enabled"
            },
            {
                "check_id": "CKV_AWS_19",
                "bc_check_id": "BC_AWS_S3_14",
                "check_name": "Ensure all data stored in the S3 bucket is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                    ]
                },
                "code_block": [
                    [
                        10,
                        "resource \"aws_s3_bucket\" \"foo\" {\n"
                    ],
                    [
                        11,
                        "  bucket        = \"tf-test-trail\"\n"
                    ],
                    [
                        12,
                        "  force_destroy = true\n"
                    ],
                    [
                        13,
                        "\n"
                    ],
                    [
                        14,
                        "  policy = <<POLICY\n"
                    ],
                    [
                        15,
                        "{\n"
                    ],
                    [
                        16,
                        "    \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        17,
                        "    \"Statement\": [\n"
                    ],
                    [
                        18,
                        "        {\n"
                    ],
                    [
                        19,
                        "            \"Sid\": \"AWSCloudTrailAclCheck\",\n"
                    ],
                    [
                        20,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        21,
                        "            \"Principal\": {\n"
                    ],
                    [
                        22,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        23,
                        "            },\n"
                    ],
                    [
                        24,
                        "            \"Action\": \"s3:GetBucketAcl\",\n"
                    ],
                    [
                        25,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail\"\n"
                    ],
                    [
                        26,
                        "        },\n"
                    ],
                    [
                        27,
                        "        {\n"
                    ],
                    [
                        28,
                        "            \"Sid\": \"AWSCloudTrailWrite\",\n"
                    ],
                    [
                        29,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        30,
                        "            \"Principal\": {\n"
                    ],
                    [
                        31,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        32,
                        "            },\n"
                    ],
                    [
                        33,
                        "            \"Action\": \"s3:PutObject\",\n"
                    ],
                    [
                        34,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail/prefix/AWSLogs/${data.aws_caller_identity.current.account_id}/*\",\n"
                    ],
                    [
                        35,
                        "            \"Condition\": {\n"
                    ],
                    [
                        36,
                        "                \"StringEquals\": {\n"
                    ],
                    [
                        37,
                        "                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n"
                    ],
                    [
                        38,
                        "                }\n"
                    ],
                    [
                        39,
                        "            }\n"
                    ],
                    [
                        40,
                        "        }\n"
                    ],
                    [
                        41,
                        "    ]\n"
                    ],
                    [
                        42,
                        "}\n"
                    ],
                    [
                        43,
                        "POLICY\n"
                    ],
                    [
                        44,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudtrail_enabled_on_multi_region/main.tf",
                "repo_file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_line_range": [
                    10,
                    44
                ],
                "resource": "aws_s3_bucket.foo",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Encryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_14-data-encrypted-at-rest"
            },
            {
                "check_id": "CKV_AWS_145",
                "bc_check_id": "BC_AWS_GENERAL_56",
                "check_name": "Ensure that S3 buckets are encrypted with KMS by default",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "server_side_encryption_configuration/[0]/rule/[0]/apply_server_side_encryption_by_default/[0]/sse_algorithm"
                    ]
                },
                "code_block": [
                    [
                        10,
                        "resource \"aws_s3_bucket\" \"foo\" {\n"
                    ],
                    [
                        11,
                        "  bucket        = \"tf-test-trail\"\n"
                    ],
                    [
                        12,
                        "  force_destroy = true\n"
                    ],
                    [
                        13,
                        "\n"
                    ],
                    [
                        14,
                        "  policy = <<POLICY\n"
                    ],
                    [
                        15,
                        "{\n"
                    ],
                    [
                        16,
                        "    \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        17,
                        "    \"Statement\": [\n"
                    ],
                    [
                        18,
                        "        {\n"
                    ],
                    [
                        19,
                        "            \"Sid\": \"AWSCloudTrailAclCheck\",\n"
                    ],
                    [
                        20,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        21,
                        "            \"Principal\": {\n"
                    ],
                    [
                        22,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        23,
                        "            },\n"
                    ],
                    [
                        24,
                        "            \"Action\": \"s3:GetBucketAcl\",\n"
                    ],
                    [
                        25,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail\"\n"
                    ],
                    [
                        26,
                        "        },\n"
                    ],
                    [
                        27,
                        "        {\n"
                    ],
                    [
                        28,
                        "            \"Sid\": \"AWSCloudTrailWrite\",\n"
                    ],
                    [
                        29,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        30,
                        "            \"Principal\": {\n"
                    ],
                    [
                        31,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        32,
                        "            },\n"
                    ],
                    [
                        33,
                        "            \"Action\": \"s3:PutObject\",\n"
                    ],
                    [
                        34,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail/prefix/AWSLogs/${data.aws_caller_identity.current.account_id}/*\",\n"
                    ],
                    [
                        35,
                        "            \"Condition\": {\n"
                    ],
                    [
                        36,
                        "                \"StringEquals\": {\n"
                    ],
                    [
                        37,
                        "                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n"
                    ],
                    [
                        38,
                        "                }\n"
                    ],
                    [
                        39,
                        "            }\n"
                    ],
                    [
                        40,
                        "        }\n"
                    ],
                    [
                        41,
                        "    ]\n"
                    ],
                    [
                        42,
                        "}\n"
                    ],
                    [
                        43,
                        "POLICY\n"
                    ],
                    [
                        44,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudtrail_enabled_on_multi_region/main.tf",
                "repo_file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_line_range": [
                    10,
                    44
                ],
                "resource": "aws_s3_bucket.foo",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3KMSEncryptedByDefault",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-s3-buckets-are-encrypted-with-kms-by-default"
            },
            {
                "check_id": "CKV_AWS_21",
                "bc_check_id": "BC_AWS_S3_16",
                "check_name": "Ensure all data stored in the S3 bucket have versioning enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "versioning/[0]/enabled"
                    ]
                },
                "code_block": [
                    [
                        10,
                        "resource \"aws_s3_bucket\" \"foo\" {\n"
                    ],
                    [
                        11,
                        "  bucket        = \"tf-test-trail\"\n"
                    ],
                    [
                        12,
                        "  force_destroy = true\n"
                    ],
                    [
                        13,
                        "\n"
                    ],
                    [
                        14,
                        "  policy = <<POLICY\n"
                    ],
                    [
                        15,
                        "{\n"
                    ],
                    [
                        16,
                        "    \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        17,
                        "    \"Statement\": [\n"
                    ],
                    [
                        18,
                        "        {\n"
                    ],
                    [
                        19,
                        "            \"Sid\": \"AWSCloudTrailAclCheck\",\n"
                    ],
                    [
                        20,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        21,
                        "            \"Principal\": {\n"
                    ],
                    [
                        22,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        23,
                        "            },\n"
                    ],
                    [
                        24,
                        "            \"Action\": \"s3:GetBucketAcl\",\n"
                    ],
                    [
                        25,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail\"\n"
                    ],
                    [
                        26,
                        "        },\n"
                    ],
                    [
                        27,
                        "        {\n"
                    ],
                    [
                        28,
                        "            \"Sid\": \"AWSCloudTrailWrite\",\n"
                    ],
                    [
                        29,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        30,
                        "            \"Principal\": {\n"
                    ],
                    [
                        31,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        32,
                        "            },\n"
                    ],
                    [
                        33,
                        "            \"Action\": \"s3:PutObject\",\n"
                    ],
                    [
                        34,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail/prefix/AWSLogs/${data.aws_caller_identity.current.account_id}/*\",\n"
                    ],
                    [
                        35,
                        "            \"Condition\": {\n"
                    ],
                    [
                        36,
                        "                \"StringEquals\": {\n"
                    ],
                    [
                        37,
                        "                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n"
                    ],
                    [
                        38,
                        "                }\n"
                    ],
                    [
                        39,
                        "            }\n"
                    ],
                    [
                        40,
                        "        }\n"
                    ],
                    [
                        41,
                        "    ]\n"
                    ],
                    [
                        42,
                        "}\n"
                    ],
                    [
                        43,
                        "POLICY\n"
                    ],
                    [
                        44,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudtrail_enabled_on_multi_region/main.tf",
                "repo_file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_line_range": [
                    10,
                    44
                ],
                "resource": "aws_s3_bucket.foo",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3Versioning",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3_16-enable-versioning"
            },
            {
                "check_id": "CKV_AWS_121",
                "bc_check_id": "BC_AWS_LOGGING_5",
                "check_name": "Ensure AWS Config is enabled in all regions",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "account_aggregation_source",
                        "organization_aggregation_source"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_config_configuration_aggregator\" \"organization\" {\n"
                    ],
                    [
                        2,
                        "\n"
                    ],
                    [
                        3,
                        "  name = \"example\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  account_aggregation_source {\n"
                    ],
                    [
                        6,
                        "    account_ids = [\"123456789012\"]\n"
                    ],
                    [
                        7,
                        "    regions     = [\"us-east-2\", \"us-east-1\", \"us-west-1\", \"us-west-2\"]\n"
                    ],
                    [
                        8,
                        "  }\n"
                    ],
                    [
                        9,
                        "}\n"
                    ]
                ],
                "file_path": "/config_aggregator_all_regions/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/config_aggregator_all_regions/main.tf",
                "repo_file_path": "/config_aggregator_all_regions/main.tf",
                "file_line_range": [
                    1,
                    9
                ],
                "resource": "aws_config_configuration_aggregator.organization",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ConfigConfgurationAggregatorAllRegions",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/logging_5-enable-aws-config-regions"
            },
            {
                "check_id": "CKV_AWS_148",
                "bc_check_id": "BC_AWS_NETWORKING_54",
                "check_name": "Ensure no default VPC is planned to be provisioned",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        12,
                        "resource \"aws_default_vpc\" \"default\" {\n"
                    ],
                    [
                        13,
                        "  tags = {\n"
                    ],
                    [
                        14,
                        "    Name = \"Default VPC\"\n"
                    ],
                    [
                        15,
                        "  }\n"
                    ],
                    [
                        16,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_ec2_to_default_vpc/main.tf",
                "repo_file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_line_range": [
                    12,
                    16
                ],
                "resource": "aws_default_vpc.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.VPCDefaultNetwork",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "Default VPC"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-no-default-vpc-is-planned-to-be-provisioned"
            },
            {
                "check_id": "CKV_AWS_126",
                "bc_check_id": "BC_AWS_LOGGING_26",
                "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "monitoring"
                    ]
                },
                "code_block": [
                    [
                        49,
                        "resource \"aws_instance\" \"t2-instance\" {\n"
                    ],
                    [
                        50,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        51,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        52,
                        "  subnet_id = aws_subnet.default-subnet.id\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_ec2_to_default_vpc/main.tf",
                "repo_file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_line_range": [
                    49,
                    53
                ],
                "resource": "aws_instance.t2-instance",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances"
            },
            {
                "check_id": "CKV_AWS_135",
                "bc_check_id": "BC_AWS_GENERAL_68",
                "check_name": "Ensure that EC2 is EBS optimized",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "ebs_optimized"
                    ]
                },
                "code_block": [
                    [
                        49,
                        "resource \"aws_instance\" \"t2-instance\" {\n"
                    ],
                    [
                        50,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        51,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        52,
                        "  subnet_id = aws_subnet.default-subnet.id\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_ec2_to_default_vpc/main.tf",
                "repo_file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_line_range": [
                    49,
                    53
                ],
                "resource": "aws_instance.t2-instance",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized"
            },
            {
                "check_id": "CKV_AWS_79",
                "bc_check_id": "BC_AWS_GENERAL_31",
                "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "metadata_options/[0]/http_tokens",
                        "metadata_options/[0]/http_endpoint"
                    ]
                },
                "code_block": [
                    [
                        49,
                        "resource \"aws_instance\" \"t2-instance\" {\n"
                    ],
                    [
                        50,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        51,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        52,
                        "  subnet_id = aws_subnet.default-subnet.id\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_ec2_to_default_vpc/main.tf",
                "repo_file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_line_range": [
                    49,
                    53
                ],
                "resource": "aws_instance.t2-instance",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
            },
            {
                "check_id": "CKV_AWS_8",
                "bc_check_id": "BC_AWS_GENERAL_13",
                "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "*_block_device/[0]/encrypted"
                    ]
                },
                "code_block": [
                    [
                        49,
                        "resource \"aws_instance\" \"t2-instance\" {\n"
                    ],
                    [
                        50,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        51,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        52,
                        "  subnet_id = aws_subnet.default-subnet.id\n"
                    ],
                    [
                        53,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_ec2_to_default_vpc/main.tf",
                "repo_file_path": "/deploy_ec2_to_default_vpc/main.tf",
                "file_line_range": [
                    49,
                    53
                ],
                "resource": "aws_instance.t2-instance",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_13"
            },
            {
                "check_id": "CKV_AWS_64",
                "bc_check_id": "BC_AWS_GENERAL_25",
                "check_name": "Ensure all data stored in the Redshift cluster is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "encrypted"
                    ]
                },
                "code_block": [
                    [
                        5,
                        "resource \"aws_redshift_cluster\" \"test\" {\n"
                    ],
                    [
                        6,
                        "  cluster_identifier = \"redshift-defaults-only\"\n"
                    ],
                    [
                        7,
                        "  node_type = \"dc2.large\"\n"
                    ],
                    [
                        8,
                        "  master_password = \"Test1234\"\n"
                    ],
                    [
                        9,
                        "  master_username = \"test\"\n"
                    ],
                    [
                        10,
                        "  skip_final_snapshot = true\n"
                    ],
                    [
                        11,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_redshift_in_ec2_classic_mode/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_redshift_in_ec2_classic_mode/main.tf",
                "repo_file_path": "/deploy_redshift_in_ec2_classic_mode/main.tf",
                "file_line_range": [
                    5,
                    11
                ],
                "resource": "aws_redshift_cluster.test",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RedshiftClusterEncryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_25"
            },
            {
                "check_id": "CKV_AWS_142",
                "bc_check_id": "BC_AWS_GENERAL_55",
                "check_name": "Ensure that Redshift cluster is encrypted by KMS",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "kms_key_id"
                    ]
                },
                "code_block": [
                    [
                        5,
                        "resource \"aws_redshift_cluster\" \"test\" {\n"
                    ],
                    [
                        6,
                        "  cluster_identifier = \"redshift-defaults-only\"\n"
                    ],
                    [
                        7,
                        "  node_type = \"dc2.large\"\n"
                    ],
                    [
                        8,
                        "  master_password = \"Test1234\"\n"
                    ],
                    [
                        9,
                        "  master_username = \"test\"\n"
                    ],
                    [
                        10,
                        "  skip_final_snapshot = true\n"
                    ],
                    [
                        11,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_redshift_in_ec2_classic_mode/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_redshift_in_ec2_classic_mode/main.tf",
                "repo_file_path": "/deploy_redshift_in_ec2_classic_mode/main.tf",
                "file_line_range": [
                    5,
                    11
                ],
                "resource": "aws_redshift_cluster.test",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RedshiftClusterKMSKey",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-redshift-cluster-is-encrypted-by-kms"
            },
            {
                "check_id": "CKV_AWS_71",
                "bc_check_id": "BC_AWS_LOGGING_12",
                "check_name": "Ensure Redshift Cluster logging is enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "logging/[0]/enable"
                    ]
                },
                "code_block": [
                    [
                        5,
                        "resource \"aws_redshift_cluster\" \"test\" {\n"
                    ],
                    [
                        6,
                        "  cluster_identifier = \"redshift-defaults-only\"\n"
                    ],
                    [
                        7,
                        "  node_type = \"dc2.large\"\n"
                    ],
                    [
                        8,
                        "  master_password = \"Test1234\"\n"
                    ],
                    [
                        9,
                        "  master_username = \"test\"\n"
                    ],
                    [
                        10,
                        "  skip_final_snapshot = true\n"
                    ],
                    [
                        11,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_redshift_in_ec2_classic_mode/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_redshift_in_ec2_classic_mode/main.tf",
                "repo_file_path": "/deploy_redshift_in_ec2_classic_mode/main.tf",
                "file_line_range": [
                    5,
                    11
                ],
                "resource": "aws_redshift_cluster.test",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RedshiftClusterLogging",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_12"
            },
            {
                "check_id": "CKV_AWS_154",
                "bc_check_id": "BC_AWS_NETWORKING_56",
                "check_name": "Ensure Redshift is not deployed outside of a VPC",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "cluster_subnet_group_name"
                    ]
                },
                "code_block": [
                    [
                        5,
                        "resource \"aws_redshift_cluster\" \"test\" {\n"
                    ],
                    [
                        6,
                        "  cluster_identifier = \"redshift-defaults-only\"\n"
                    ],
                    [
                        7,
                        "  node_type = \"dc2.large\"\n"
                    ],
                    [
                        8,
                        "  master_password = \"Test1234\"\n"
                    ],
                    [
                        9,
                        "  master_username = \"test\"\n"
                    ],
                    [
                        10,
                        "  skip_final_snapshot = true\n"
                    ],
                    [
                        11,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_redshift_in_ec2_classic_mode/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_redshift_in_ec2_classic_mode/main.tf",
                "repo_file_path": "/deploy_redshift_in_ec2_classic_mode/main.tf",
                "file_line_range": [
                    5,
                    11
                ],
                "resource": "aws_redshift_cluster.test",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RedshiftInEc2ClassicMode",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-redshift-is-not-deployed-outside-of-a-vpc"
            },
            {
                "check_id": "CKV_AWS_87",
                "bc_check_id": "BC_AWS_PUBLIC_9",
                "check_name": "Redshift cluster should not be publicly accessible",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "publicly_accessible"
                    ]
                },
                "code_block": [
                    [
                        5,
                        "resource \"aws_redshift_cluster\" \"test\" {\n"
                    ],
                    [
                        6,
                        "  cluster_identifier = \"redshift-defaults-only\"\n"
                    ],
                    [
                        7,
                        "  node_type = \"dc2.large\"\n"
                    ],
                    [
                        8,
                        "  master_password = \"Test1234\"\n"
                    ],
                    [
                        9,
                        "  master_username = \"test\"\n"
                    ],
                    [
                        10,
                        "  skip_final_snapshot = true\n"
                    ],
                    [
                        11,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_redshift_in_ec2_classic_mode/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_redshift_in_ec2_classic_mode/main.tf",
                "repo_file_path": "/deploy_redshift_in_ec2_classic_mode/main.tf",
                "file_line_range": [
                    5,
                    11
                ],
                "resource": "aws_redshift_cluster.test",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RedshitClusterPubliclyAvailable",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/public_9"
            },
            {
                "check_id": "CKV_AWS_119",
                "bc_check_id": "BC_AWS_GENERAL_52",
                "check_name": "Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_dynamodb_table\" \"basic-dynamodb-table\" {\n"
                    ],
                    [
                        2,
                        "  name           = \"GameScores\"\n"
                    ],
                    [
                        3,
                        "  billing_mode   = \"PROVISIONED\"\n"
                    ],
                    [
                        4,
                        "  read_capacity  = 20\n"
                    ],
                    [
                        5,
                        "  write_capacity = 20\n"
                    ],
                    [
                        6,
                        "  hash_key       = \"UserId\"\n"
                    ],
                    [
                        7,
                        "  range_key      = \"GameTitle\"\n"
                    ],
                    [
                        8,
                        "\n"
                    ],
                    [
                        9,
                        "  attribute {\n"
                    ],
                    [
                        10,
                        "    name = \"UserId\"\n"
                    ],
                    [
                        11,
                        "    type = \"S\"\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "\n"
                    ],
                    [
                        14,
                        "  attribute {\n"
                    ],
                    [
                        15,
                        "    name = \"GameTitle\"\n"
                    ],
                    [
                        16,
                        "    type = \"S\"\n"
                    ],
                    [
                        17,
                        "  }\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  attribute {\n"
                    ],
                    [
                        20,
                        "    name = \"TopScore\"\n"
                    ],
                    [
                        21,
                        "    type = \"N\"\n"
                    ],
                    [
                        22,
                        "  }\n"
                    ],
                    [
                        23,
                        "\n"
                    ],
                    [
                        24,
                        "  ttl {\n"
                    ],
                    [
                        25,
                        "    attribute_name = \"TimeToExist\"\n"
                    ],
                    [
                        26,
                        "    enabled        = false\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "\n"
                    ],
                    [
                        29,
                        "  global_secondary_index {\n"
                    ],
                    [
                        30,
                        "    name               = \"GameTitleIndex\"\n"
                    ],
                    [
                        31,
                        "    hash_key           = \"GameTitle\"\n"
                    ],
                    [
                        32,
                        "    range_key          = \"TopScore\"\n"
                    ],
                    [
                        33,
                        "    write_capacity     = 10\n"
                    ],
                    [
                        34,
                        "    read_capacity      = 10\n"
                    ],
                    [
                        35,
                        "    projection_type    = \"INCLUDE\"\n"
                    ],
                    [
                        36,
                        "    non_key_attributes = [\"UserId\"]\n"
                    ],
                    [
                        37,
                        "  }\n"
                    ],
                    [
                        38,
                        "\n"
                    ],
                    [
                        39,
                        "  tags = {\n"
                    ],
                    [
                        40,
                        "    Name        = \"dynamodb-table-1\"\n"
                    ],
                    [
                        41,
                        "    Environment = \"production\"\n"
                    ],
                    [
                        42,
                        "  }\n"
                    ],
                    [
                        43,
                        "}\n"
                    ]
                ],
                "file_path": "/dynamodb_without_recovery_enabled/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/dynamodb_without_recovery_enabled/main.tf",
                "repo_file_path": "/dynamodb_without_recovery_enabled/main.tf",
                "file_line_range": [
                    1,
                    43
                ],
                "resource": "aws_dynamodb_table.basic-dynamodb-table",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.DynamoDBTablesEncrypted",
                "fixed_definition": null,
                "entity_tags": {
                    "Environment": "production",
                    "Name": "dynamodb-table-1"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-dynamodb-tables-are-encrypted"
            },
            {
                "check_id": "CKV_AWS_28",
                "bc_check_id": "BC_AWS_GENERAL_6",
                "check_name": "Ensure Dynamodb point in time recovery (backup) is enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "point_in_time_recovery/[0]/enabled"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_dynamodb_table\" \"basic-dynamodb-table\" {\n"
                    ],
                    [
                        2,
                        "  name           = \"GameScores\"\n"
                    ],
                    [
                        3,
                        "  billing_mode   = \"PROVISIONED\"\n"
                    ],
                    [
                        4,
                        "  read_capacity  = 20\n"
                    ],
                    [
                        5,
                        "  write_capacity = 20\n"
                    ],
                    [
                        6,
                        "  hash_key       = \"UserId\"\n"
                    ],
                    [
                        7,
                        "  range_key      = \"GameTitle\"\n"
                    ],
                    [
                        8,
                        "\n"
                    ],
                    [
                        9,
                        "  attribute {\n"
                    ],
                    [
                        10,
                        "    name = \"UserId\"\n"
                    ],
                    [
                        11,
                        "    type = \"S\"\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "\n"
                    ],
                    [
                        14,
                        "  attribute {\n"
                    ],
                    [
                        15,
                        "    name = \"GameTitle\"\n"
                    ],
                    [
                        16,
                        "    type = \"S\"\n"
                    ],
                    [
                        17,
                        "  }\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  attribute {\n"
                    ],
                    [
                        20,
                        "    name = \"TopScore\"\n"
                    ],
                    [
                        21,
                        "    type = \"N\"\n"
                    ],
                    [
                        22,
                        "  }\n"
                    ],
                    [
                        23,
                        "\n"
                    ],
                    [
                        24,
                        "  ttl {\n"
                    ],
                    [
                        25,
                        "    attribute_name = \"TimeToExist\"\n"
                    ],
                    [
                        26,
                        "    enabled        = false\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "\n"
                    ],
                    [
                        29,
                        "  global_secondary_index {\n"
                    ],
                    [
                        30,
                        "    name               = \"GameTitleIndex\"\n"
                    ],
                    [
                        31,
                        "    hash_key           = \"GameTitle\"\n"
                    ],
                    [
                        32,
                        "    range_key          = \"TopScore\"\n"
                    ],
                    [
                        33,
                        "    write_capacity     = 10\n"
                    ],
                    [
                        34,
                        "    read_capacity      = 10\n"
                    ],
                    [
                        35,
                        "    projection_type    = \"INCLUDE\"\n"
                    ],
                    [
                        36,
                        "    non_key_attributes = [\"UserId\"]\n"
                    ],
                    [
                        37,
                        "  }\n"
                    ],
                    [
                        38,
                        "\n"
                    ],
                    [
                        39,
                        "  tags = {\n"
                    ],
                    [
                        40,
                        "    Name        = \"dynamodb-table-1\"\n"
                    ],
                    [
                        41,
                        "    Environment = \"production\"\n"
                    ],
                    [
                        42,
                        "  }\n"
                    ],
                    [
                        43,
                        "}\n"
                    ]
                ],
                "file_path": "/dynamodb_without_recovery_enabled/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/dynamodb_without_recovery_enabled/main.tf",
                "repo_file_path": "/dynamodb_without_recovery_enabled/main.tf",
                "file_line_range": [
                    1,
                    43
                ],
                "resource": "aws_dynamodb_table.basic-dynamodb-table",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.DynamodbRecovery",
                "fixed_definition": null,
                "entity_tags": {
                    "Environment": "production",
                    "Name": "dynamodb-table-1"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_6"
            },
            {
                "check_id": "CKV_AWS_126",
                "bc_check_id": "BC_AWS_LOGGING_26",
                "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "monitoring"
                    ]
                },
                "code_block": [
                    [
                        17,
                        "resource \"aws_instance\" \"web\" {\n"
                    ],
                    [
                        18,
                        "  ami           = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        19,
                        "  instance_type = \"c1.xlarge\"\n"
                    ],
                    [
                        20,
                        "\n"
                    ],
                    [
                        21,
                        "  tags = {\n"
                    ],
                    [
                        22,
                        "    Name = \"HelloWorld\"\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "}\n"
                    ]
                ],
                "file_path": "/ec2_ebs_not_optimized/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/ec2_ebs_not_optimized/main.tf",
                "repo_file_path": "/ec2_ebs_not_optimized/main.tf",
                "file_line_range": [
                    17,
                    24
                ],
                "resource": "aws_instance.web",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "HelloWorld"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances"
            },
            {
                "check_id": "CKV_AWS_135",
                "bc_check_id": "BC_AWS_GENERAL_68",
                "check_name": "Ensure that EC2 is EBS optimized",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "ebs_optimized"
                    ]
                },
                "code_block": [
                    [
                        17,
                        "resource \"aws_instance\" \"web\" {\n"
                    ],
                    [
                        18,
                        "  ami           = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        19,
                        "  instance_type = \"c1.xlarge\"\n"
                    ],
                    [
                        20,
                        "\n"
                    ],
                    [
                        21,
                        "  tags = {\n"
                    ],
                    [
                        22,
                        "    Name = \"HelloWorld\"\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "}\n"
                    ]
                ],
                "file_path": "/ec2_ebs_not_optimized/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/ec2_ebs_not_optimized/main.tf",
                "repo_file_path": "/ec2_ebs_not_optimized/main.tf",
                "file_line_range": [
                    17,
                    24
                ],
                "resource": "aws_instance.web",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "HelloWorld"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized"
            },
            {
                "check_id": "CKV_AWS_79",
                "bc_check_id": "BC_AWS_GENERAL_31",
                "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "metadata_options/[0]/http_tokens",
                        "metadata_options/[0]/http_endpoint"
                    ]
                },
                "code_block": [
                    [
                        17,
                        "resource \"aws_instance\" \"web\" {\n"
                    ],
                    [
                        18,
                        "  ami           = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        19,
                        "  instance_type = \"c1.xlarge\"\n"
                    ],
                    [
                        20,
                        "\n"
                    ],
                    [
                        21,
                        "  tags = {\n"
                    ],
                    [
                        22,
                        "    Name = \"HelloWorld\"\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "}\n"
                    ]
                ],
                "file_path": "/ec2_ebs_not_optimized/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/ec2_ebs_not_optimized/main.tf",
                "repo_file_path": "/ec2_ebs_not_optimized/main.tf",
                "file_line_range": [
                    17,
                    24
                ],
                "resource": "aws_instance.web",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "HelloWorld"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
            },
            {
                "check_id": "CKV_AWS_8",
                "bc_check_id": "BC_AWS_GENERAL_13",
                "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "*_block_device/[0]/encrypted"
                    ]
                },
                "code_block": [
                    [
                        17,
                        "resource \"aws_instance\" \"web\" {\n"
                    ],
                    [
                        18,
                        "  ami           = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        19,
                        "  instance_type = \"c1.xlarge\"\n"
                    ],
                    [
                        20,
                        "\n"
                    ],
                    [
                        21,
                        "  tags = {\n"
                    ],
                    [
                        22,
                        "    Name = \"HelloWorld\"\n"
                    ],
                    [
                        23,
                        "  }\n"
                    ],
                    [
                        24,
                        "}\n"
                    ]
                ],
                "file_path": "/ec2_ebs_not_optimized/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/ec2_ebs_not_optimized/main.tf",
                "repo_file_path": "/ec2_ebs_not_optimized/main.tf",
                "file_line_range": [
                    17,
                    24
                ],
                "resource": "aws_instance.web",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "HelloWorld"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_13"
            },
            {
                "check_id": "CKV_AWS_51",
                "bc_check_id": "BC_AWS_GENERAL_24",
                "check_name": "Ensure ECR Image Tags are immutable",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "image_tag_mutability"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_ecr_repository\" \"foo\" {\n"
                    ],
                    [
                        2,
                        "  name                 = \"bar\"\n"
                    ],
                    [
                        3,
                        "  image_tag_mutability = \"MUTABLE\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  image_scanning_configuration {\n"
                    ],
                    [
                        6,
                        "    scan_on_push = true\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/ecr_make_tags_immutable/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/ecr_make_tags_immutable/main.tf",
                "repo_file_path": "/ecr_make_tags_immutable/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_ecr_repository.foo",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ECRImmutableTags",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_24"
            },
            {
                "check_id": "CKV_AWS_136",
                "bc_check_id": "BC_AWS_GENERAL_53",
                "check_name": "Ensure that ECR repositories are encrypted using KMS",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "encryption_configuration/[0]/encryption_type"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_ecr_repository\" \"foo\" {\n"
                    ],
                    [
                        2,
                        "  name                 = \"bar\"\n"
                    ],
                    [
                        3,
                        "  image_tag_mutability = \"MUTABLE\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  image_scanning_configuration {\n"
                    ],
                    [
                        6,
                        "    scan_on_push = true\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/ecr_make_tags_immutable/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/ecr_make_tags_immutable/main.tf",
                "repo_file_path": "/ecr_make_tags_immutable/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_ecr_repository.foo",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ECRRepositoryEncrypted",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ecr-repositories-are-encrypted"
            },
            {
                "check_id": "CKV_AWS_163",
                "bc_check_id": "BC_AWS_GENERAL_8",
                "check_name": "Ensure ECR image scanning on push is enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "image_scanning_configuration/[0]/scan_on_push"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_ecr_repository\" \"foo\" {\n"
                    ],
                    [
                        2,
                        "  name                 = \"bar\"\n"
                    ],
                    [
                        3,
                        "  image_tag_mutability = \"MUTABLE\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  image_scanning_configuration {\n"
                    ],
                    [
                        6,
                        "    scan_on_push = false\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/ecr_use_image_scanning/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/ecr_use_image_scanning/main.tf",
                "repo_file_path": "/ecr_use_image_scanning/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_ecr_repository.foo",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ECRImageScanning",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_8"
            },
            {
                "check_id": "CKV_AWS_51",
                "bc_check_id": "BC_AWS_GENERAL_24",
                "check_name": "Ensure ECR Image Tags are immutable",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "image_tag_mutability"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_ecr_repository\" \"foo\" {\n"
                    ],
                    [
                        2,
                        "  name                 = \"bar\"\n"
                    ],
                    [
                        3,
                        "  image_tag_mutability = \"MUTABLE\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  image_scanning_configuration {\n"
                    ],
                    [
                        6,
                        "    scan_on_push = false\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/ecr_use_image_scanning/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/ecr_use_image_scanning/main.tf",
                "repo_file_path": "/ecr_use_image_scanning/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_ecr_repository.foo",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ECRImmutableTags",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_24"
            },
            {
                "check_id": "CKV_AWS_136",
                "bc_check_id": "BC_AWS_GENERAL_53",
                "check_name": "Ensure that ECR repositories are encrypted using KMS",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "encryption_configuration/[0]/encryption_type"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_ecr_repository\" \"foo\" {\n"
                    ],
                    [
                        2,
                        "  name                 = \"bar\"\n"
                    ],
                    [
                        3,
                        "  image_tag_mutability = \"MUTABLE\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  image_scanning_configuration {\n"
                    ],
                    [
                        6,
                        "    scan_on_push = false\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/ecr_use_image_scanning/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/ecr_use_image_scanning/main.tf",
                "repo_file_path": "/ecr_use_image_scanning/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_ecr_repository.foo",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ECRRepositoryEncrypted",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ecr-repositories-are-encrypted"
            },
            {
                "check_id": "CKV_AWS_65",
                "bc_check_id": "BC_AWS_LOGGING_11",
                "check_name": "Ensure container insights are enabled on ECS cluster",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_ecs_cluster\" \"foo\" {\n"
                    ],
                    [
                        2,
                        "  name = \"white-hart\"\n"
                    ],
                    [
                        3,
                        "\n"
                    ],
                    [
                        4,
                        "  # setting {\n"
                    ],
                    [
                        5,
                        "    # name  = \"containerInsights\"\n"
                    ],
                    [
                        6,
                        "    # value = \"enabled\"\n"
                    ],
                    [
                        7,
                        "  # }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/ecs_cluster_container_insights/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/ecs_cluster_container_insights/main.tf",
                "repo_file_path": "/ecs_cluster_container_insights/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_ecs_cluster.foo",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ECSClusterContainerInsights",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_logging_11"
            },
            {
                "check_id": "CKV_AWS_134",
                "bc_check_id": "BC_AWS_GENERAL_45",
                "check_name": "Ensure that Amazon ElastiCache Redis clusters have automatic backup turned on",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "snapshot_retention_limit"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_elasticache_cluster\" \"default\" {\n"
                    ],
                    [
                        2,
                        "  cluster_id           = \"cluster\"\n"
                    ],
                    [
                        3,
                        "  engine               = \"redis\"\n"
                    ],
                    [
                        4,
                        "  node_type            = \"cache.m5.large\"\n"
                    ],
                    [
                        5,
                        "  num_cache_nodes      = 1\n"
                    ],
                    [
                        6,
                        "  parameter_group_name = \"default.redis6.x\"\n"
                    ],
                    [
                        7,
                        "}\n"
                    ]
                ],
                "file_path": "/elasticache_automatic_backup/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/elasticache_automatic_backup/main.tf",
                "repo_file_path": "/elasticache_automatic_backup/main.tf",
                "file_line_range": [
                    1,
                    7
                ],
                "resource": "aws_elasticache_cluster.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ElasticCacheAutomaticBackup",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-amazon-elasticache-redis-clusters-have-automatic-backup-turned-on"
            },
            {
                "check_id": "CKV_AWS_134",
                "bc_check_id": "BC_AWS_GENERAL_45",
                "check_name": "Ensure that Amazon ElastiCache Redis clusters have automatic backup turned on",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "snapshot_retention_limit"
                    ]
                },
                "code_block": [
                    [
                        9,
                        "resource \"aws_elasticache_cluster\" \"disabled\" {\n"
                    ],
                    [
                        10,
                        "  cluster_id           = \"cluster\"\n"
                    ],
                    [
                        11,
                        "  engine               = \"redis\"\n"
                    ],
                    [
                        12,
                        "  node_type            = \"cache.m5.large\"\n"
                    ],
                    [
                        13,
                        "  num_cache_nodes      = 1\n"
                    ],
                    [
                        14,
                        "  parameter_group_name = \"default.redis6.x\"\n"
                    ],
                    [
                        15,
                        "\n"
                    ],
                    [
                        16,
                        "  snapshot_retention_limit = 0\n"
                    ],
                    [
                        17,
                        "}\n"
                    ]
                ],
                "file_path": "/elasticache_automatic_backup/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/elasticache_automatic_backup/main.tf",
                "repo_file_path": "/elasticache_automatic_backup/main.tf",
                "file_line_range": [
                    9,
                    17
                ],
                "resource": "aws_elasticache_cluster.disabled",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ElasticCacheAutomaticBackup",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-amazon-elasticache-redis-clusters-have-automatic-backup-turned-on"
            },
            {
                "check_id": "CKV_AWS_7",
                "bc_check_id": "BC_AWS_LOGGING_8",
                "check_name": "Ensure rotation for customer created CMKs is enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "enable_key_rotation"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_kms_key\" \"a\" {\n"
                    ],
                    [
                        2,
                        "  description             = \"KMS key 1\"\n"
                    ],
                    [
                        3,
                        "  deletion_window_in_days = 10\n"
                    ],
                    [
                        4,
                        "}"
                    ]
                ],
                "file_path": "/kms_uses_rotation/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/kms_uses_rotation/main.tf",
                "repo_file_path": "/kms_uses_rotation/main.tf",
                "file_line_range": [
                    1,
                    4
                ],
                "resource": "aws_kms_key.a",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.KMSRotation",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/logging_8"
            },
            {
                "check_id": "CKV_AWS_96",
                "bc_check_id": "BC_AWS_GENERAL_38",
                "check_name": "Ensure all data stored in Aurora is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "storage_encrypted"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_rds_cluster\" \"default\" {\n"
                    ],
                    [
                        2,
                        "  cluster_identifier      = \"aurora-cluster-demo\"\n"
                    ],
                    [
                        3,
                        "  engine                  = \"aurora-mysql\"\n"
                    ],
                    [
                        4,
                        "  engine_version          = \"5.7.mysql_aurora.2.03.2\"\n"
                    ],
                    [
                        5,
                        "  availability_zones      = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                    ],
                    [
                        6,
                        "  database_name           = \"mydb\"\n"
                    ],
                    [
                        7,
                        "  master_username         = \"foo\"\n"
                    ],
                    [
                        8,
                        "  master_password         = \"bar\"\n"
                    ],
                    [
                        9,
                        "  preferred_backup_window = \"07:00-09:00\"\n"
                    ],
                    [
                        10,
                        "}\n"
                    ]
                ],
                "file_path": "/rds_retention_period_set/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/rds_retention_period_set/main.tf",
                "repo_file_path": "/rds_retention_period_set/main.tf",
                "file_line_range": [
                    1,
                    10
                ],
                "resource": "aws_rds_cluster.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.AuroraEncryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_38"
            },
            {
                "check_id": "CKV_AWS_133",
                "bc_check_id": "BC_AWS_GENERAL_46",
                "check_name": "Ensure that RDS instances has backup policy",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_rds_cluster\" \"default\" {\n"
                    ],
                    [
                        2,
                        "  cluster_identifier      = \"aurora-cluster-demo\"\n"
                    ],
                    [
                        3,
                        "  engine                  = \"aurora-mysql\"\n"
                    ],
                    [
                        4,
                        "  engine_version          = \"5.7.mysql_aurora.2.03.2\"\n"
                    ],
                    [
                        5,
                        "  availability_zones      = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                    ],
                    [
                        6,
                        "  database_name           = \"mydb\"\n"
                    ],
                    [
                        7,
                        "  master_username         = \"foo\"\n"
                    ],
                    [
                        8,
                        "  master_password         = \"bar\"\n"
                    ],
                    [
                        9,
                        "  preferred_backup_window = \"07:00-09:00\"\n"
                    ],
                    [
                        10,
                        "}\n"
                    ]
                ],
                "file_path": "/rds_retention_period_set/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/rds_retention_period_set/main.tf",
                "repo_file_path": "/rds_retention_period_set/main.tf",
                "file_line_range": [
                    1,
                    10
                ],
                "resource": "aws_rds_cluster.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.DBInstanceBackupRetentionPeriod",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-rds-instances-have-backup-policy"
            },
            {
                "check_id": "CKV_AWS_162",
                "bc_check_id": "BC_AWS_IAM_66",
                "check_name": "Ensure RDS cluster has IAM authentication enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "iam_database_authentication_enabled"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_rds_cluster\" \"default\" {\n"
                    ],
                    [
                        2,
                        "  cluster_identifier      = \"aurora-cluster-demo\"\n"
                    ],
                    [
                        3,
                        "  engine                  = \"aurora-mysql\"\n"
                    ],
                    [
                        4,
                        "  engine_version          = \"5.7.mysql_aurora.2.03.2\"\n"
                    ],
                    [
                        5,
                        "  availability_zones      = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                    ],
                    [
                        6,
                        "  database_name           = \"mydb\"\n"
                    ],
                    [
                        7,
                        "  master_username         = \"foo\"\n"
                    ],
                    [
                        8,
                        "  master_password         = \"bar\"\n"
                    ],
                    [
                        9,
                        "  preferred_backup_window = \"07:00-09:00\"\n"
                    ],
                    [
                        10,
                        "}\n"
                    ]
                ],
                "file_path": "/rds_retention_period_set/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/rds_retention_period_set/main.tf",
                "repo_file_path": "/rds_retention_period_set/main.tf",
                "file_line_range": [
                    1,
                    10
                ],
                "resource": "aws_rds_cluster.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RDSClusterIAMAuthentication",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-rds-cluster-has-iam-authentication-enabled"
            },
            {
                "check_id": "CKV_AWS_139",
                "bc_check_id": "BC_AWS_GENERAL_69",
                "check_name": "Ensure that RDS clusters have deletion protection enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "deletion_protection"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_rds_cluster\" \"default\" {\n"
                    ],
                    [
                        2,
                        "  cluster_identifier      = \"aurora-cluster-demo\"\n"
                    ],
                    [
                        3,
                        "  engine                  = \"aurora-mysql\"\n"
                    ],
                    [
                        4,
                        "  engine_version          = \"5.7.mysql_aurora.2.03.2\"\n"
                    ],
                    [
                        5,
                        "  availability_zones      = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                    ],
                    [
                        6,
                        "  database_name           = \"mydb\"\n"
                    ],
                    [
                        7,
                        "  master_username         = \"foo\"\n"
                    ],
                    [
                        8,
                        "  master_password         = \"bar\"\n"
                    ],
                    [
                        9,
                        "  preferred_backup_window = \"07:00-09:00\"\n"
                    ],
                    [
                        10,
                        "}\n"
                    ]
                ],
                "file_path": "/rds_retention_period_set/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/rds_retention_period_set/main.tf",
                "repo_file_path": "/rds_retention_period_set/main.tf",
                "file_line_range": [
                    1,
                    10
                ],
                "resource": "aws_rds_cluster.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RDSDeletionProtection",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-rds-clusters-and-instances-have-deletion-protection-enabled"
            },
            {
                "check_id": "CKV_AWS_128",
                "bc_check_id": "BC_AWS_IAM_59",
                "check_name": "Ensure that an Amazon RDS Clusters have AWS Identity and Access Management (IAM) authentication enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "iam_database_authentication_enabled"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_rds_cluster\" \"default\" {\n"
                    ],
                    [
                        2,
                        "  cluster_identifier      = \"aurora-cluster-demo\"\n"
                    ],
                    [
                        3,
                        "  engine                  = \"aurora-mysql\"\n"
                    ],
                    [
                        4,
                        "  engine_version          = \"5.7.mysql_aurora.2.03.2\"\n"
                    ],
                    [
                        5,
                        "  availability_zones      = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                    ],
                    [
                        6,
                        "  database_name           = \"mydb\"\n"
                    ],
                    [
                        7,
                        "  master_username         = \"foo\"\n"
                    ],
                    [
                        8,
                        "  master_password         = \"bar\"\n"
                    ],
                    [
                        9,
                        "  preferred_backup_window = \"07:00-09:00\"\n"
                    ],
                    [
                        10,
                        "}\n"
                    ]
                ],
                "file_path": "/rds_retention_period_set/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/rds_retention_period_set/main.tf",
                "repo_file_path": "/rds_retention_period_set/main.tf",
                "file_line_range": [
                    1,
                    10
                ],
                "resource": "aws_rds_cluster.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RDSEnableIAMAuthentication",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-an-amazon-rds-clusters-have-iam-authentication-enabled"
            },
            {
                "check_id": "CKV_AWS_23",
                "bc_check_id": "BC_AWS_NETWORKING_31",
                "check_name": "Ensure every security groups rule has a description",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "egress/[0]",
                        "ingress/[0]"
                    ]
                },
                "code_block": [
                    [
                        15,
                        "resource \"aws_security_group\" \"default\" {\n"
                    ],
                    [
                        16,
                        "  name        = \"examplerulename\"\n"
                    ],
                    [
                        17,
                        "  vpc_id      = aws_vpc.vpc.id\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  ingress {\n"
                    ],
                    [
                        20,
                        "    from_port   = 443\n"
                    ],
                    [
                        21,
                        "    to_port     = 443\n"
                    ],
                    [
                        22,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        23,
                        "    cidr_blocks = [\"10.0.0.0/24\"]\n"
                    ],
                    [
                        24,
                        "  }\n"
                    ],
                    [
                        25,
                        "\n"
                    ],
                    [
                        26,
                        "  egress {\n"
                    ],
                    [
                        27,
                        "    from_port   = 0\n"
                    ],
                    [
                        28,
                        "    to_port     = 0\n"
                    ],
                    [
                        29,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        30,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        31,
                        "  }\n"
                    ],
                    [
                        32,
                        "\n"
                    ],
                    [
                        33,
                        "  tags = {\n"
                    ],
                    [
                        34,
                        "    Name = \"example_rule_with_descriptions\"\n"
                    ],
                    [
                        35,
                        "  }\n"
                    ],
                    [
                        36,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_rules/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_rules/main.tf",
                "repo_file_path": "/security_group_no_description_for_rules/main.tf",
                "file_line_range": [
                    15,
                    36
                ],
                "resource": "aws_security_group.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "example_rule_with_descriptions"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_31"
            },
            {
                "check_id": "CKV_AWS_126",
                "bc_check_id": "BC_AWS_LOGGING_26",
                "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "monitoring"
                    ]
                },
                "code_block": [
                    [
                        61,
                        "resource \"aws_instance\" \"ec2\" {\n"
                    ],
                    [
                        62,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        63,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        64,
                        "  subnet_id     = aws_subnet.subnet.id\n"
                    ],
                    [
                        65,
                        "  vpc_security_group_ids  = [aws_security_group.default.id]\n"
                    ],
                    [
                        66,
                        "\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_rules/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_rules/main.tf",
                "repo_file_path": "/security_group_no_description_for_rules/main.tf",
                "file_line_range": [
                    61,
                    67
                ],
                "resource": "aws_instance.ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances"
            },
            {
                "check_id": "CKV_AWS_135",
                "bc_check_id": "BC_AWS_GENERAL_68",
                "check_name": "Ensure that EC2 is EBS optimized",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "ebs_optimized"
                    ]
                },
                "code_block": [
                    [
                        61,
                        "resource \"aws_instance\" \"ec2\" {\n"
                    ],
                    [
                        62,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        63,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        64,
                        "  subnet_id     = aws_subnet.subnet.id\n"
                    ],
                    [
                        65,
                        "  vpc_security_group_ids  = [aws_security_group.default.id]\n"
                    ],
                    [
                        66,
                        "\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_rules/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_rules/main.tf",
                "repo_file_path": "/security_group_no_description_for_rules/main.tf",
                "file_line_range": [
                    61,
                    67
                ],
                "resource": "aws_instance.ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized"
            },
            {
                "check_id": "CKV_AWS_79",
                "bc_check_id": "BC_AWS_GENERAL_31",
                "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "metadata_options/[0]/http_tokens",
                        "metadata_options/[0]/http_endpoint"
                    ]
                },
                "code_block": [
                    [
                        61,
                        "resource \"aws_instance\" \"ec2\" {\n"
                    ],
                    [
                        62,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        63,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        64,
                        "  subnet_id     = aws_subnet.subnet.id\n"
                    ],
                    [
                        65,
                        "  vpc_security_group_ids  = [aws_security_group.default.id]\n"
                    ],
                    [
                        66,
                        "\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_rules/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_rules/main.tf",
                "repo_file_path": "/security_group_no_description_for_rules/main.tf",
                "file_line_range": [
                    61,
                    67
                ],
                "resource": "aws_instance.ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
            },
            {
                "check_id": "CKV_AWS_8",
                "bc_check_id": "BC_AWS_GENERAL_13",
                "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "*_block_device/[0]/encrypted"
                    ]
                },
                "code_block": [
                    [
                        61,
                        "resource \"aws_instance\" \"ec2\" {\n"
                    ],
                    [
                        62,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        63,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        64,
                        "  subnet_id     = aws_subnet.subnet.id\n"
                    ],
                    [
                        65,
                        "  vpc_security_group_ids  = [aws_security_group.default.id]\n"
                    ],
                    [
                        66,
                        "\n"
                    ],
                    [
                        67,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_rules/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_rules/main.tf",
                "repo_file_path": "/security_group_no_description_for_rules/main.tf",
                "file_line_range": [
                    61,
                    67
                ],
                "resource": "aws_instance.ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_13"
            },
            {
                "check_id": "CKV_AWS_126",
                "bc_check_id": "BC_AWS_LOGGING_26",
                "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "monitoring"
                    ]
                },
                "code_block": [
                    [
                        63,
                        "resource \"aws_instance\" \"ec2\" {\n"
                    ],
                    [
                        64,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        65,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        66,
                        "  subnet_id     = aws_subnet.subnet.id\n"
                    ],
                    [
                        67,
                        "  vpc_security_group_ids  = [aws_security_group.default.id]\n"
                    ],
                    [
                        68,
                        "\n"
                    ],
                    [
                        69,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                "repo_file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_line_range": [
                    63,
                    69
                ],
                "resource": "aws_instance.ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances"
            },
            {
                "check_id": "CKV_AWS_135",
                "bc_check_id": "BC_AWS_GENERAL_68",
                "check_name": "Ensure that EC2 is EBS optimized",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "ebs_optimized"
                    ]
                },
                "code_block": [
                    [
                        63,
                        "resource \"aws_instance\" \"ec2\" {\n"
                    ],
                    [
                        64,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        65,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        66,
                        "  subnet_id     = aws_subnet.subnet.id\n"
                    ],
                    [
                        67,
                        "  vpc_security_group_ids  = [aws_security_group.default.id]\n"
                    ],
                    [
                        68,
                        "\n"
                    ],
                    [
                        69,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                "repo_file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_line_range": [
                    63,
                    69
                ],
                "resource": "aws_instance.ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized"
            },
            {
                "check_id": "CKV_AWS_79",
                "bc_check_id": "BC_AWS_GENERAL_31",
                "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "metadata_options/[0]/http_tokens",
                        "metadata_options/[0]/http_endpoint"
                    ]
                },
                "code_block": [
                    [
                        63,
                        "resource \"aws_instance\" \"ec2\" {\n"
                    ],
                    [
                        64,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        65,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        66,
                        "  subnet_id     = aws_subnet.subnet.id\n"
                    ],
                    [
                        67,
                        "  vpc_security_group_ids  = [aws_security_group.default.id]\n"
                    ],
                    [
                        68,
                        "\n"
                    ],
                    [
                        69,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                "repo_file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_line_range": [
                    63,
                    69
                ],
                "resource": "aws_instance.ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
            },
            {
                "check_id": "CKV_AWS_8",
                "bc_check_id": "BC_AWS_GENERAL_13",
                "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "*_block_device/[0]/encrypted"
                    ]
                },
                "code_block": [
                    [
                        63,
                        "resource \"aws_instance\" \"ec2\" {\n"
                    ],
                    [
                        64,
                        "  ami = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        65,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        66,
                        "  subnet_id     = aws_subnet.subnet.id\n"
                    ],
                    [
                        67,
                        "  vpc_security_group_ids  = [aws_security_group.default.id]\n"
                    ],
                    [
                        68,
                        "\n"
                    ],
                    [
                        69,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                "repo_file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_line_range": [
                    63,
                    69
                ],
                "resource": "aws_instance.ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_13"
            },
            {
                "check_id": "CKV_AWS_26",
                "bc_check_id": "BC_AWS_GENERAL_15",
                "check_name": "Ensure all data stored in the SNS topic is encrypted",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "kms_master_key_id"
                    ]
                },
                "code_block": [
                    [
                        5,
                        "resource \"aws_sns_topic\" \"cloudrail_1\" {\n"
                    ],
                    [
                        6,
                        "  name              = \"sns_not_ecnrypted-1\"\n"
                    ],
                    [
                        7,
                        "  tags = {\n"
                    ],
                    [
                        8,
                        "    Name = \"Sns Topic Cloudrail Test\"\n"
                    ],
                    [
                        9,
                        "  }\n"
                    ],
                    [
                        10,
                        "}\n"
                    ]
                ],
                "file_path": "/tag_all_items/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/tag_all_items/main.tf",
                "repo_file_path": "/tag_all_items/main.tf",
                "file_line_range": [
                    5,
                    10
                ],
                "resource": "aws_sns_topic.cloudrail_1",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SNSTopicEncryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "Sns Topic Cloudrail Test"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_15"
            },
            {
                "check_id": "CKV_AWS_27",
                "bc_check_id": "BC_AWS_GENERAL_16",
                "check_name": "Ensure all data stored in the SQS queue is encrypted",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "kms_master_key_id"
                    ]
                },
                "code_block": [
                    [
                        12,
                        "resource \"aws_sqs_queue\" \"cloudrail\" {\n"
                    ],
                    [
                        13,
                        "  name = \"sqs_non_encrypted\"\n"
                    ],
                    [
                        14,
                        "  tags = {\n"
                    ],
                    [
                        15,
                        "    Name = \"Sqs Cloudrail Test\"\n"
                    ],
                    [
                        16,
                        "  }\n"
                    ],
                    [
                        17,
                        "}\n"
                    ]
                ],
                "file_path": "/tag_all_items/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/tag_all_items/main.tf",
                "repo_file_path": "/tag_all_items/main.tf",
                "file_line_range": [
                    12,
                    17
                ],
                "resource": "aws_sqs_queue.cloudrail",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SQSQueueEncryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "Sqs Cloudrail Test"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_16-encrypt-sqs-queue"
            },
            {
                "check_id": "CKV_AWS_3",
                "bc_check_id": "BC_AWS_GENERAL_3",
                "check_name": "Ensure all data stored in the EBS is securely encrypted",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "encrypted"
                    ]
                },
                "code_block": [
                    [
                        15,
                        "resource \"aws_ebs_volume\" \"example\" {\n"
                    ],
                    [
                        16,
                        "  availability_zone = data.aws_availability_zones.available.names[0]\n"
                    ],
                    [
                        17,
                        "  size              = 40\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  tags = {\n"
                    ],
                    [
                        20,
                        "    Name = \"HelloWorld\"\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    15,
                    22
                ],
                "resource": "aws_ebs_volume.example",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EBSEncryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "HelloWorld"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_3-encrypt-eps-volume"
            },
            {
                "check_id": "CKV_AWS_126",
                "bc_check_id": "BC_AWS_LOGGING_26",
                "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "monitoring"
                    ]
                },
                "code_block": [
                    [
                        45,
                        "resource \"aws_instance\" \"example_with_new_ami\" {\n"
                    ],
                    [
                        46,
                        "  ami = aws_ami.example.id\n"
                    ],
                    [
                        47,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        48,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    45,
                    48
                ],
                "resource": "aws_instance.example_with_new_ami",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances"
            },
            {
                "check_id": "CKV_AWS_135",
                "bc_check_id": "BC_AWS_GENERAL_68",
                "check_name": "Ensure that EC2 is EBS optimized",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "ebs_optimized"
                    ]
                },
                "code_block": [
                    [
                        45,
                        "resource \"aws_instance\" \"example_with_new_ami\" {\n"
                    ],
                    [
                        46,
                        "  ami = aws_ami.example.id\n"
                    ],
                    [
                        47,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        48,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    45,
                    48
                ],
                "resource": "aws_instance.example_with_new_ami",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized"
            },
            {
                "check_id": "CKV_AWS_79",
                "bc_check_id": "BC_AWS_GENERAL_31",
                "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "metadata_options/[0]/http_tokens",
                        "metadata_options/[0]/http_endpoint"
                    ]
                },
                "code_block": [
                    [
                        45,
                        "resource \"aws_instance\" \"example_with_new_ami\" {\n"
                    ],
                    [
                        46,
                        "  ami = aws_ami.example.id\n"
                    ],
                    [
                        47,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        48,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    45,
                    48
                ],
                "resource": "aws_instance.example_with_new_ami",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
            },
            {
                "check_id": "CKV_AWS_8",
                "bc_check_id": "BC_AWS_GENERAL_13",
                "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "*_block_device/[0]/encrypted"
                    ]
                },
                "code_block": [
                    [
                        45,
                        "resource \"aws_instance\" \"example_with_new_ami\" {\n"
                    ],
                    [
                        46,
                        "  ami = aws_ami.example.id\n"
                    ],
                    [
                        47,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        48,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    45,
                    48
                ],
                "resource": "aws_instance.example_with_new_ami",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_13"
            },
            {
                "check_id": "CKV_AWS_126",
                "bc_check_id": "BC_AWS_LOGGING_26",
                "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "monitoring"
                    ]
                },
                "code_block": [
                    [
                        80,
                        "resource \"aws_instance\" \"example_with_copied_ami\" {\n"
                    ],
                    [
                        81,
                        "  ami = aws_ami_copy.example.id\n"
                    ],
                    [
                        82,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        83,
                        "  \n"
                    ],
                    [
                        84,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    80,
                    84
                ],
                "resource": "aws_instance.example_with_copied_ami",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances"
            },
            {
                "check_id": "CKV_AWS_135",
                "bc_check_id": "BC_AWS_GENERAL_68",
                "check_name": "Ensure that EC2 is EBS optimized",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "ebs_optimized"
                    ]
                },
                "code_block": [
                    [
                        80,
                        "resource \"aws_instance\" \"example_with_copied_ami\" {\n"
                    ],
                    [
                        81,
                        "  ami = aws_ami_copy.example.id\n"
                    ],
                    [
                        82,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        83,
                        "  \n"
                    ],
                    [
                        84,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    80,
                    84
                ],
                "resource": "aws_instance.example_with_copied_ami",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized"
            },
            {
                "check_id": "CKV_AWS_79",
                "bc_check_id": "BC_AWS_GENERAL_31",
                "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "metadata_options/[0]/http_tokens",
                        "metadata_options/[0]/http_endpoint"
                    ]
                },
                "code_block": [
                    [
                        80,
                        "resource \"aws_instance\" \"example_with_copied_ami\" {\n"
                    ],
                    [
                        81,
                        "  ami = aws_ami_copy.example.id\n"
                    ],
                    [
                        82,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        83,
                        "  \n"
                    ],
                    [
                        84,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    80,
                    84
                ],
                "resource": "aws_instance.example_with_copied_ami",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
            },
            {
                "check_id": "CKV_AWS_8",
                "bc_check_id": "BC_AWS_GENERAL_13",
                "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "*_block_device/[0]/encrypted"
                    ]
                },
                "code_block": [
                    [
                        80,
                        "resource \"aws_instance\" \"example_with_copied_ami\" {\n"
                    ],
                    [
                        81,
                        "  ami = aws_ami_copy.example.id\n"
                    ],
                    [
                        82,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        83,
                        "  \n"
                    ],
                    [
                        84,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    80,
                    84
                ],
                "resource": "aws_instance.example_with_copied_ami",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_13"
            },
            {
                "check_id": "CKV_AWS_126",
                "bc_check_id": "BC_AWS_LOGGING_26",
                "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "monitoring"
                    ]
                },
                "code_block": [
                    [
                        93,
                        "resource \"aws_instance\" \"example_with_ami_from_instance\" {\n"
                    ],
                    [
                        94,
                        "  ami = aws_ami_from_instance.example.id\n"
                    ],
                    [
                        95,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        96,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    93,
                    96
                ],
                "resource": "aws_instance.example_with_ami_from_instance",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances"
            },
            {
                "check_id": "CKV_AWS_135",
                "bc_check_id": "BC_AWS_GENERAL_68",
                "check_name": "Ensure that EC2 is EBS optimized",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "ebs_optimized"
                    ]
                },
                "code_block": [
                    [
                        93,
                        "resource \"aws_instance\" \"example_with_ami_from_instance\" {\n"
                    ],
                    [
                        94,
                        "  ami = aws_ami_from_instance.example.id\n"
                    ],
                    [
                        95,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        96,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    93,
                    96
                ],
                "resource": "aws_instance.example_with_ami_from_instance",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized"
            },
            {
                "check_id": "CKV_AWS_79",
                "bc_check_id": "BC_AWS_GENERAL_31",
                "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "metadata_options/[0]/http_tokens",
                        "metadata_options/[0]/http_endpoint"
                    ]
                },
                "code_block": [
                    [
                        93,
                        "resource \"aws_instance\" \"example_with_ami_from_instance\" {\n"
                    ],
                    [
                        94,
                        "  ami = aws_ami_from_instance.example.id\n"
                    ],
                    [
                        95,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        96,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    93,
                    96
                ],
                "resource": "aws_instance.example_with_ami_from_instance",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
            },
            {
                "check_id": "CKV_AWS_8",
                "bc_check_id": "BC_AWS_GENERAL_13",
                "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "*_block_device/[0]/encrypted"
                    ]
                },
                "code_block": [
                    [
                        93,
                        "resource \"aws_instance\" \"example_with_ami_from_instance\" {\n"
                    ],
                    [
                        94,
                        "  ami = aws_ami_from_instance.example.id\n"
                    ],
                    [
                        95,
                        "  instance_type = \"t3.nano\"\n"
                    ],
                    [
                        96,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    93,
                    96
                ],
                "resource": "aws_instance.example_with_ami_from_instance",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_13"
            },
            {
                "check_id": "CKV_AWS_126",
                "bc_check_id": "BC_AWS_LOGGING_26",
                "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "monitoring"
                    ]
                },
                "code_block": [
                    [
                        98,
                        "resource \"aws_instance\" \"public-ubuntu-from-data\" {\n"
                    ],
                    [
                        99,
                        "  ami           = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        100,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        101,
                        "  \n"
                    ],
                    [
                        102,
                        "  tags = {\n"
                    ],
                    [
                        103,
                        "    Name = \"public-ubuntu-from-data\"\n"
                    ],
                    [
                        104,
                        "  }\n"
                    ],
                    [
                        105,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    98,
                    105
                ],
                "resource": "aws_instance.public-ubuntu-from-data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "public-ubuntu-from-data"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances"
            },
            {
                "check_id": "CKV_AWS_135",
                "bc_check_id": "BC_AWS_GENERAL_68",
                "check_name": "Ensure that EC2 is EBS optimized",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "ebs_optimized"
                    ]
                },
                "code_block": [
                    [
                        98,
                        "resource \"aws_instance\" \"public-ubuntu-from-data\" {\n"
                    ],
                    [
                        99,
                        "  ami           = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        100,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        101,
                        "  \n"
                    ],
                    [
                        102,
                        "  tags = {\n"
                    ],
                    [
                        103,
                        "    Name = \"public-ubuntu-from-data\"\n"
                    ],
                    [
                        104,
                        "  }\n"
                    ],
                    [
                        105,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    98,
                    105
                ],
                "resource": "aws_instance.public-ubuntu-from-data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "public-ubuntu-from-data"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ec2-is-ebs-optimized"
            },
            {
                "check_id": "CKV_AWS_79",
                "bc_check_id": "BC_AWS_GENERAL_31",
                "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "metadata_options/[0]/http_tokens",
                        "metadata_options/[0]/http_endpoint"
                    ]
                },
                "code_block": [
                    [
                        98,
                        "resource \"aws_instance\" \"public-ubuntu-from-data\" {\n"
                    ],
                    [
                        99,
                        "  ami           = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        100,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        101,
                        "  \n"
                    ],
                    [
                        102,
                        "  tags = {\n"
                    ],
                    [
                        103,
                        "    Name = \"public-ubuntu-from-data\"\n"
                    ],
                    [
                        104,
                        "  }\n"
                    ],
                    [
                        105,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    98,
                    105
                ],
                "resource": "aws_instance.public-ubuntu-from-data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "public-ubuntu-from-data"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/bc_aws_general_31"
            },
            {
                "check_id": "CKV_AWS_8",
                "bc_check_id": "BC_AWS_GENERAL_13",
                "check_name": "Ensure all data stored in the Launch configuration EBS is securely encrypted",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "*_block_device/[0]/encrypted"
                    ]
                },
                "code_block": [
                    [
                        98,
                        "resource \"aws_instance\" \"public-ubuntu-from-data\" {\n"
                    ],
                    [
                        99,
                        "  ami           = data.aws_ami.ubuntu.id\n"
                    ],
                    [
                        100,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        101,
                        "  \n"
                    ],
                    [
                        102,
                        "  tags = {\n"
                    ],
                    [
                        103,
                        "    Name = \"public-ubuntu-from-data\"\n"
                    ],
                    [
                        104,
                        "  }\n"
                    ],
                    [
                        105,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    98,
                    105
                ],
                "resource": "aws_instance.public-ubuntu-from-data",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "public-ubuntu-from-data"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/general_13"
            },
            {
                "check_id": "CKV2_AWS_28",
                "bc_check_id": "BC_AWS_NETWORKING_58",
                "check_name": "Ensure public facing ALB are protected by WAF",
                "check_result": {
                    "result": "FAILED",
                    "entity": {
                        "aws_lb": {
                            "default": {
                                "internal": [
                                    false
                                ],
                                "load_balancer_type": [
                                    "application"
                                ],
                                "name": [
                                    "alb"
                                ],
                                "subnets": [
                                    "module.vpc.public_subnets"
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_lb\" \"default\" {\n"
                    ],
                    [
                        26,
                        "  internal           = false\n"
                    ],
                    [
                        27,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        28,
                        "  name               = \"alb\"\n"
                    ],
                    [
                        29,
                        "  subnets            = module.vpc.public_subnets\n"
                    ],
                    [
                        30,
                        "}\n"
                    ]
                ],
                "file_path": "/alb_drop_http_headers/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/alb_drop_http_headers/main.tf",
                "repo_file_path": "/alb_drop_http_headers/main.tf",
                "file_line_range": [
                    25,
                    30
                ],
                "resource": "aws_lb.default",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {},
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-public-facing-alb-are-protected-by-waf"
            },
            {
                "check_id": "CKV2_AWS_28",
                "bc_check_id": "BC_AWS_NETWORKING_58",
                "check_name": "Ensure public facing ALB are protected by WAF",
                "check_result": {
                    "result": "FAILED",
                    "entity": {
                        "aws_lb": {
                            "disabled": {
                                "drop_invalid_header_fields": [
                                    false
                                ],
                                "internal": [
                                    false
                                ],
                                "load_balancer_type": [
                                    "application"
                                ],
                                "name": [
                                    "alb"
                                ],
                                "subnets": [
                                    "module.vpc.public_subnets"
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        39,
                        "resource \"aws_lb\" \"disabled\" {\n"
                    ],
                    [
                        40,
                        "  internal           = false\n"
                    ],
                    [
                        41,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        42,
                        "  name               = \"alb\"\n"
                    ],
                    [
                        43,
                        "  subnets            = module.vpc.public_subnets\n"
                    ],
                    [
                        44,
                        "\n"
                    ],
                    [
                        45,
                        "  drop_invalid_header_fields = false\n"
                    ],
                    [
                        46,
                        "}\n"
                    ]
                ],
                "file_path": "/alb_drop_http_headers/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/alb_drop_http_headers/main.tf",
                "repo_file_path": "/alb_drop_http_headers/main.tf",
                "file_line_range": [
                    39,
                    46
                ],
                "resource": "aws_lb.disabled",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {},
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-public-facing-alb-are-protected-by-waf"
            },
            {
                "check_id": "CKV2_AWS_16",
                "bc_check_id": "BC_AWS_GENERAL_44",
                "check_name": "Ensure that Auto Scaling is enabled on your DynamoDB tables",
                "check_result": {
                    "result": "FAILED",
                    "entity": {
                        "aws_dynamodb_table": {
                            "basic-dynamodb-table": {
                                "attribute": [
                                    {
                                        "name": [
                                            "UserId"
                                        ],
                                        "type": [
                                            "S"
                                        ]
                                    },
                                    {
                                        "name": [
                                            "GameTitle"
                                        ],
                                        "type": [
                                            "S"
                                        ]
                                    },
                                    {
                                        "name": [
                                            "TopScore"
                                        ],
                                        "type": [
                                            "N"
                                        ]
                                    }
                                ],
                                "billing_mode": [
                                    "PROVISIONED"
                                ],
                                "global_secondary_index": [
                                    {
                                        "hash_key": [
                                            "GameTitle"
                                        ],
                                        "name": [
                                            "GameTitleIndex"
                                        ],
                                        "non_key_attributes": [
                                            [
                                                "UserId"
                                            ]
                                        ],
                                        "projection_type": [
                                            "INCLUDE"
                                        ],
                                        "range_key": [
                                            "TopScore"
                                        ],
                                        "read_capacity": [
                                            10
                                        ],
                                        "write_capacity": [
                                            10
                                        ]
                                    }
                                ],
                                "hash_key": [
                                    "UserId"
                                ],
                                "name": [
                                    "GameScores"
                                ],
                                "range_key": [
                                    "GameTitle"
                                ],
                                "read_capacity": [
                                    20
                                ],
                                "tags": [
                                    {
                                        "Environment": "production",
                                        "Name": "dynamodb-table-1"
                                    }
                                ],
                                "ttl": [
                                    {
                                        "attribute_name": [
                                            "TimeToExist"
                                        ],
                                        "enabled": [
                                            false
                                        ]
                                    }
                                ],
                                "write_capacity": [
                                    20
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_dynamodb_table\" \"basic-dynamodb-table\" {\n"
                    ],
                    [
                        2,
                        "  name           = \"GameScores\"\n"
                    ],
                    [
                        3,
                        "  billing_mode   = \"PROVISIONED\"\n"
                    ],
                    [
                        4,
                        "  read_capacity  = 20\n"
                    ],
                    [
                        5,
                        "  write_capacity = 20\n"
                    ],
                    [
                        6,
                        "  hash_key       = \"UserId\"\n"
                    ],
                    [
                        7,
                        "  range_key      = \"GameTitle\"\n"
                    ],
                    [
                        8,
                        "\n"
                    ],
                    [
                        9,
                        "  attribute {\n"
                    ],
                    [
                        10,
                        "    name = \"UserId\"\n"
                    ],
                    [
                        11,
                        "    type = \"S\"\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "\n"
                    ],
                    [
                        14,
                        "  attribute {\n"
                    ],
                    [
                        15,
                        "    name = \"GameTitle\"\n"
                    ],
                    [
                        16,
                        "    type = \"S\"\n"
                    ],
                    [
                        17,
                        "  }\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  attribute {\n"
                    ],
                    [
                        20,
                        "    name = \"TopScore\"\n"
                    ],
                    [
                        21,
                        "    type = \"N\"\n"
                    ],
                    [
                        22,
                        "  }\n"
                    ],
                    [
                        23,
                        "\n"
                    ],
                    [
                        24,
                        "  ttl {\n"
                    ],
                    [
                        25,
                        "    attribute_name = \"TimeToExist\"\n"
                    ],
                    [
                        26,
                        "    enabled        = false\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "\n"
                    ],
                    [
                        29,
                        "  global_secondary_index {\n"
                    ],
                    [
                        30,
                        "    name               = \"GameTitleIndex\"\n"
                    ],
                    [
                        31,
                        "    hash_key           = \"GameTitle\"\n"
                    ],
                    [
                        32,
                        "    range_key          = \"TopScore\"\n"
                    ],
                    [
                        33,
                        "    write_capacity     = 10\n"
                    ],
                    [
                        34,
                        "    read_capacity      = 10\n"
                    ],
                    [
                        35,
                        "    projection_type    = \"INCLUDE\"\n"
                    ],
                    [
                        36,
                        "    non_key_attributes = [\"UserId\"]\n"
                    ],
                    [
                        37,
                        "  }\n"
                    ],
                    [
                        38,
                        "\n"
                    ],
                    [
                        39,
                        "  tags = {\n"
                    ],
                    [
                        40,
                        "    Name        = \"dynamodb-table-1\"\n"
                    ],
                    [
                        41,
                        "    Environment = \"production\"\n"
                    ],
                    [
                        42,
                        "  }\n"
                    ],
                    [
                        43,
                        "}\n"
                    ]
                ],
                "file_path": "/dynamodb_without_recovery_enabled/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/dynamodb_without_recovery_enabled/main.tf",
                "repo_file_path": "/dynamodb_without_recovery_enabled/main.tf",
                "file_line_range": [
                    1,
                    43
                ],
                "resource": "aws_dynamodb_table.basic-dynamodb-table",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {
                    "Environment": "production",
                    "Name": "dynamodb-table-1"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-auto-scaling-is-enabled-on-your-dynamodb-tables"
            },
            {
                "check_id": "CKV2_AWS_10",
                "bc_check_id": "BC_AWS_LOGGING_27",
                "check_name": "Ensure CloudTrail trails are integrated with CloudWatch Logs",
                "check_result": {
                    "result": "FAILED",
                    "entity": {
                        "aws_cloudtrail": {
                            "foobar": {
                                "include_global_service_events": [
                                    false
                                ],
                                "name": [
                                    "tf-trail-foobar"
                                ],
                                "s3_bucket_name": [
                                    "aws_s3_bucket.foo.id"
                                ],
                                "s3_key_prefix": [
                                    "prefix"
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        3,
                        "resource \"aws_cloudtrail\" \"foobar\" {\n"
                    ],
                    [
                        4,
                        "  name                          = \"tf-trail-foobar\"\n"
                    ],
                    [
                        5,
                        "  s3_bucket_name                = aws_s3_bucket.foo.id\n"
                    ],
                    [
                        6,
                        "  s3_key_prefix                 = \"prefix\"\n"
                    ],
                    [
                        7,
                        "  include_global_service_events = false\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudtrail_enabled_on_multi_region/main.tf",
                "repo_file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_line_range": [
                    3,
                    8
                ],
                "resource": "aws_cloudtrail.foobar",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {},
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-cloudtrail-trails-are-integrated-with-cloudwatch-logs"
            },
            {
                "check_id": "CKV2_AWS_9",
                "bc_check_id": "BC_AWS_GENERAL_50",
                "check_name": "Ensure that EBS are added in the backup plans of AWS Backup",
                "check_result": {
                    "result": "FAILED",
                    "entity": {
                        "aws_ebs_volume": {
                            "example": {
                                "availability_zone": [
                                    "data.aws_availability_zones.available.names[0]"
                                ],
                                "size": [
                                    40
                                ],
                                "tags": [
                                    {
                                        "Name": "HelloWorld"
                                    }
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        15,
                        "resource \"aws_ebs_volume\" \"example\" {\n"
                    ],
                    [
                        16,
                        "  availability_zone = data.aws_availability_zones.available.names[0]\n"
                    ],
                    [
                        17,
                        "  size              = 40\n"
                    ],
                    [
                        18,
                        "\n"
                    ],
                    [
                        19,
                        "  tags = {\n"
                    ],
                    [
                        20,
                        "    Name = \"HelloWorld\"\n"
                    ],
                    [
                        21,
                        "  }\n"
                    ],
                    [
                        22,
                        "}\n"
                    ]
                ],
                "file_path": "/using_public_amis/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/using_public_amis/main.tf",
                "repo_file_path": "/using_public_amis/main.tf",
                "file_line_range": [
                    15,
                    22
                ],
                "resource": "aws_ebs_volume.example",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "HelloWorld"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-ebs-are-added-in-the-backup-plans-of-aws-backup"
            },
            {
                "check_id": "CKV2_AWS_8",
                "bc_check_id": "BC_AWS_GENERAL_49",
                "check_name": "Ensure that RDS clusters has backup plan of AWS Backup",
                "check_result": {
                    "result": "FAILED",
                    "entity": {
                        "aws_rds_cluster": {
                            "default": {
                                "availability_zones": [
                                    [
                                        "us-west-2a",
                                        "us-west-2b",
                                        "us-west-2c"
                                    ]
                                ],
                                "cluster_identifier": [
                                    "aurora-cluster-demo"
                                ],
                                "database_name": [
                                    "mydb"
                                ],
                                "engine": [
                                    "aurora-mysql"
                                ],
                                "engine_version": [
                                    "5.7.mysql_aurora.2.03.2"
                                ],
                                "master_password": [
                                    "bar"
                                ],
                                "master_username": [
                                    "foo"
                                ],
                                "preferred_backup_window": [
                                    "07:00-09:00"
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_rds_cluster\" \"default\" {\n"
                    ],
                    [
                        2,
                        "  cluster_identifier      = \"aurora-cluster-demo\"\n"
                    ],
                    [
                        3,
                        "  engine                  = \"aurora-mysql\"\n"
                    ],
                    [
                        4,
                        "  engine_version          = \"5.7.mysql_aurora.2.03.2\"\n"
                    ],
                    [
                        5,
                        "  availability_zones      = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]\n"
                    ],
                    [
                        6,
                        "  database_name           = \"mydb\"\n"
                    ],
                    [
                        7,
                        "  master_username         = \"foo\"\n"
                    ],
                    [
                        8,
                        "  master_password         = \"bar\"\n"
                    ],
                    [
                        9,
                        "  preferred_backup_window = \"07:00-09:00\"\n"
                    ],
                    [
                        10,
                        "}\n"
                    ]
                ],
                "file_path": "/rds_retention_period_set/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/rds_retention_period_set/main.tf",
                "repo_file_path": "/rds_retention_period_set/main.tf",
                "file_line_range": [
                    1,
                    10
                ],
                "resource": "aws_rds_cluster.default",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {},
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-rds-clusters-has-backup-plan-of-aws-backup"
            },
            {
                "check_id": "CKV2_AWS_13",
                "bc_check_id": "BC_AWS_GENERAL_47",
                "check_name": "Ensure that Redshift clusters has backup plan of AWS Backup",
                "check_result": {
                    "result": "FAILED",
                    "entity": {
                        "aws_redshift_cluster": {
                            "test": {
                                "cluster_identifier": [
                                    "redshift-defaults-only"
                                ],
                                "master_password": [
                                    "Test1234"
                                ],
                                "master_username": [
                                    "test"
                                ],
                                "node_type": [
                                    "dc2.large"
                                ],
                                "skip_final_snapshot": [
                                    true
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        5,
                        "resource \"aws_redshift_cluster\" \"test\" {\n"
                    ],
                    [
                        6,
                        "  cluster_identifier = \"redshift-defaults-only\"\n"
                    ],
                    [
                        7,
                        "  node_type = \"dc2.large\"\n"
                    ],
                    [
                        8,
                        "  master_password = \"Test1234\"\n"
                    ],
                    [
                        9,
                        "  master_username = \"test\"\n"
                    ],
                    [
                        10,
                        "  skip_final_snapshot = true\n"
                    ],
                    [
                        11,
                        "}\n"
                    ]
                ],
                "file_path": "/deploy_redshift_in_ec2_classic_mode/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/deploy_redshift_in_ec2_classic_mode/main.tf",
                "repo_file_path": "/deploy_redshift_in_ec2_classic_mode/main.tf",
                "file_line_range": [
                    5,
                    11
                ],
                "resource": "aws_redshift_cluster.test",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {},
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-redshift-clusters-has-backup-plan-of-aws-backup"
            },
            {
                "check_id": "CKV2_AWS_6",
                "bc_check_id": "BC_AWS_NETWORKING_52",
                "check_name": "Ensure that S3 bucket has a Public Access block",
                "check_result": {
                    "result": "FAILED",
                    "entity": {
                        "aws_s3_bucket": {
                            "b": {
                                "acl": [
                                    "private"
                                ],
                                "bucket": [
                                    "mybucket"
                                ],
                                "tags": [
                                    {
                                        "Name": "My bucket"
                                    }
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_s3_bucket\" \"b\" {\n"
                    ],
                    [
                        2,
                        "  bucket = \"mybucket\"\n"
                    ],
                    [
                        3,
                        "  acl    = \"private\"\n"
                    ],
                    [
                        4,
                        "\n"
                    ],
                    [
                        5,
                        "  tags = {\n"
                    ],
                    [
                        6,
                        "    Name = \"My bucket\"\n"
                    ],
                    [
                        7,
                        "  }\n"
                    ],
                    [
                        8,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudfront_not_using_waf/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudfront_not_using_waf/main.tf",
                "repo_file_path": "/cloudfront_not_using_waf/main.tf",
                "file_line_range": [
                    1,
                    8
                ],
                "resource": "aws_s3_bucket.b",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "My bucket"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached"
            },
            {
                "check_id": "CKV2_AWS_6",
                "bc_check_id": "BC_AWS_NETWORKING_52",
                "check_name": "Ensure that S3 bucket has a Public Access block",
                "check_result": {
                    "result": "FAILED",
                    "entity": {
                        "aws_s3_bucket": {
                            "foo": {
                                "bucket": [
                                    "tf-test-trail"
                                ],
                                "force_destroy": [
                                    true
                                ],
                                "policy": [
                                    {
                                        "Version": "2012-10-17",
                                        "Statement": [
                                            {
                                                "Sid": "AWSCloudTrailAclCheck",
                                                "Effect": "Allow",
                                                "Principal": {
                                                    "Service": "cloudtrail.amazonaws.com"
                                                },
                                                "Action": "s3:GetBucketAcl",
                                                "Resource": "arn:aws:s3:::tf-test-trail"
                                            },
                                            {
                                                "Sid": "AWSCloudTrailWrite",
                                                "Effect": "Allow",
                                                "Principal": {
                                                    "Service": "cloudtrail.amazonaws.com"
                                                },
                                                "Action": "s3:PutObject",
                                                "Resource": "arn:aws:s3:::tf-test-trail/prefix/AWSLogs/${data.aws_caller_identity.current.account_id}/*",
                                                "Condition": {
                                                    "StringEquals": {
                                                        "s3:x-amz-acl": "bucket-owner-full-control"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        10,
                        "resource \"aws_s3_bucket\" \"foo\" {\n"
                    ],
                    [
                        11,
                        "  bucket        = \"tf-test-trail\"\n"
                    ],
                    [
                        12,
                        "  force_destroy = true\n"
                    ],
                    [
                        13,
                        "\n"
                    ],
                    [
                        14,
                        "  policy = <<POLICY\n"
                    ],
                    [
                        15,
                        "{\n"
                    ],
                    [
                        16,
                        "    \"Version\": \"2012-10-17\",\n"
                    ],
                    [
                        17,
                        "    \"Statement\": [\n"
                    ],
                    [
                        18,
                        "        {\n"
                    ],
                    [
                        19,
                        "            \"Sid\": \"AWSCloudTrailAclCheck\",\n"
                    ],
                    [
                        20,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        21,
                        "            \"Principal\": {\n"
                    ],
                    [
                        22,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        23,
                        "            },\n"
                    ],
                    [
                        24,
                        "            \"Action\": \"s3:GetBucketAcl\",\n"
                    ],
                    [
                        25,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail\"\n"
                    ],
                    [
                        26,
                        "        },\n"
                    ],
                    [
                        27,
                        "        {\n"
                    ],
                    [
                        28,
                        "            \"Sid\": \"AWSCloudTrailWrite\",\n"
                    ],
                    [
                        29,
                        "            \"Effect\": \"Allow\",\n"
                    ],
                    [
                        30,
                        "            \"Principal\": {\n"
                    ],
                    [
                        31,
                        "              \"Service\": \"cloudtrail.amazonaws.com\"\n"
                    ],
                    [
                        32,
                        "            },\n"
                    ],
                    [
                        33,
                        "            \"Action\": \"s3:PutObject\",\n"
                    ],
                    [
                        34,
                        "            \"Resource\": \"arn:aws:s3:::tf-test-trail/prefix/AWSLogs/${data.aws_caller_identity.current.account_id}/*\",\n"
                    ],
                    [
                        35,
                        "            \"Condition\": {\n"
                    ],
                    [
                        36,
                        "                \"StringEquals\": {\n"
                    ],
                    [
                        37,
                        "                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"\n"
                    ],
                    [
                        38,
                        "                }\n"
                    ],
                    [
                        39,
                        "            }\n"
                    ],
                    [
                        40,
                        "        }\n"
                    ],
                    [
                        41,
                        "    ]\n"
                    ],
                    [
                        42,
                        "}\n"
                    ],
                    [
                        43,
                        "POLICY\n"
                    ],
                    [
                        44,
                        "}\n"
                    ]
                ],
                "file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/cloudtrail_enabled_on_multi_region/main.tf",
                "repo_file_path": "/cloudtrail_enabled_on_multi_region/main.tf",
                "file_line_range": [
                    10,
                    44
                ],
                "resource": "aws_s3_bucket.foo",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {},
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/s3-bucket-should-have-public-access-blocks-defaults-to-false-if-the-public-access-block-is-not-attached"
            },
            {
                "check_id": "CKV2_AWS_5",
                "bc_check_id": "BC_AWS_NETWORKING_51",
                "check_name": "Ensure that Security Groups are attached to an other resource",
                "check_result": {
                    "result": "FAILED",
                    "entity": {
                        "aws_security_group": {
                            "allow_tls": {
                                "description": [
                                    "Allow TLS inbound traffic"
                                ],
                                "egress": [
                                    {
                                        "cidr_blocks": [
                                            [
                                                "0.0.0.0/0"
                                            ]
                                        ],
                                        "from_port": [
                                            0
                                        ],
                                        "ipv6_cidr_blocks": [
                                            [
                                                "::/0"
                                            ]
                                        ],
                                        "protocol": [
                                            "-1"
                                        ],
                                        "to_port": [
                                            0
                                        ]
                                    }
                                ],
                                "ingress": [
                                    {
                                        "cidr_blocks": [
                                            [
                                                "0.0.0.0/0"
                                            ]
                                        ],
                                        "description": [
                                            "TLS anywhere"
                                        ],
                                        "from_port": [
                                            443
                                        ],
                                        "protocol": [
                                            "tcp"
                                        ],
                                        "to_port": [
                                            443
                                        ]
                                    }
                                ],
                                "name": [
                                    "allow_tls"
                                ],
                                "tags": [
                                    {
                                        "Name": "allow_tls"
                                    }
                                ],
                                "vpc_id": [
                                    "aws_vpc.example.id"
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        7,
                        "resource \"aws_security_group\" \"allow_tls\" {\n"
                    ],
                    [
                        8,
                        "  name        = \"allow_tls\"\n"
                    ],
                    [
                        9,
                        "  vpc_id = aws_vpc.example.id\n"
                    ],
                    [
                        10,
                        "  description = \"Allow TLS inbound traffic\"\n"
                    ],
                    [
                        11,
                        "\n"
                    ],
                    [
                        12,
                        "  ingress {\n"
                    ],
                    [
                        13,
                        "    description      = \"TLS anywhere\"\n"
                    ],
                    [
                        14,
                        "    from_port        = 443\n"
                    ],
                    [
                        15,
                        "    to_port          = 443\n"
                    ],
                    [
                        16,
                        "    protocol         = \"tcp\"\n"
                    ],
                    [
                        17,
                        "    cidr_blocks      = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        18,
                        "  }\n"
                    ],
                    [
                        19,
                        "\n"
                    ],
                    [
                        20,
                        "  egress {\n"
                    ],
                    [
                        21,
                        "    from_port        = 0\n"
                    ],
                    [
                        22,
                        "    to_port          = 0\n"
                    ],
                    [
                        23,
                        "    protocol         = \"-1\"\n"
                    ],
                    [
                        24,
                        "    cidr_blocks      = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        25,
                        "    ipv6_cidr_blocks = [\"::/0\"]\n"
                    ],
                    [
                        26,
                        "  }\n"
                    ],
                    [
                        27,
                        "\n"
                    ],
                    [
                        28,
                        "  tags = {\n"
                    ],
                    [
                        29,
                        "    Name = \"allow_tls\"\n"
                    ],
                    [
                        30,
                        "  }\n"
                    ],
                    [
                        31,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_unused/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_unused/main.tf",
                "repo_file_path": "/security_group_no_unused/main.tf",
                "file_line_range": [
                    7,
                    31
                ],
                "resource": "aws_security_group.allow_tls",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "allow_tls"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/ensure-that-security-groups-are-attached-to-ec2-instances-or-elastic-network-interfaces-enis"
            },
            {
                "check_id": "CKV2_AWS_11",
                "bc_check_id": "BC_AWS_LOGGING_9",
                "check_name": "Ensure VPC flow logging is enabled in all VPCs",
                "check_result": {
                    "result": "FAILED",
                    "entity": {
                        "aws_vpc": {
                            "vpc": {
                                "cidr_block": [
                                    "10.0.0.0/24"
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        10,
                        "resource \"aws_vpc\" \"vpc\" {\n"
                    ],
                    [
                        11,
                        "  cidr_block = local.cidr_block\n"
                    ],
                    [
                        12,
                        "\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                "repo_file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_line_range": [
                    10,
                    13
                ],
                "resource": "aws_vpc.vpc",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {},
                "caller_file_path": null,
                "caller_file_line_range": null,
                "breadcrumbs": {
                    "cidr_block": [
                        {
                            "type": "locals",
                            "name": "cidr_block",
                            "path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                            "module_connection": false
                        }
                    ]
                },
                "guideline": "https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging"
            },
            {
                "check_id": "CKV2_AWS_11",
                "bc_check_id": "BC_AWS_LOGGING_9",
                "check_name": "Ensure VPC flow logging is enabled in all VPCs",
                "check_result": {
                    "result": "FAILED",
                    "entity": {
                        "aws_vpc": {
                            "example": {
                                "cidr_block": [
                                    "10.0.0.0/16"
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        3,
                        "resource \"aws_vpc\" \"example\" {\n"
                    ],
                    [
                        4,
                        "    cidr_block = \"10.0.0.0/16\"\n"
                    ],
                    [
                        5,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_unused/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_unused/main.tf",
                "repo_file_path": "/security_group_no_unused/main.tf",
                "file_line_range": [
                    3,
                    5
                ],
                "resource": "aws_vpc.example",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {},
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/logging_9-enable-vpc-flow-logging"
            },
            {
                "check_id": "CKV2_AWS_12",
                "bc_check_id": "BC_AWS_NETWORKING_4",
                "check_name": "Ensure the default security group of every VPC restricts all traffic",
                "check_result": {
                    "result": "FAILED",
                    "entity": {
                        "aws_vpc": {
                            "vpc": {
                                "cidr_block": [
                                    "10.0.0.0/24"
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        10,
                        "resource \"aws_vpc\" \"vpc\" {\n"
                    ],
                    [
                        11,
                        "  cidr_block = local.cidr_block\n"
                    ],
                    [
                        12,
                        "\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                "repo_file_path": "/security_group_no_description_for_security_group/main.tf",
                "file_line_range": [
                    10,
                    13
                ],
                "resource": "aws_vpc.vpc",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {},
                "caller_file_path": null,
                "caller_file_line_range": null,
                "breadcrumbs": {
                    "cidr_block": [
                        {
                            "type": "locals",
                            "name": "cidr_block",
                            "path": "/tmp/ws-scm/JS-Demo/security_group_no_description_for_security_group/main.tf",
                            "module_connection": false
                        }
                    ]
                },
                "guideline": "https://docs.bridgecrew.io/docs/networking_4"
            },
            {
                "check_id": "CKV2_AWS_12",
                "bc_check_id": "BC_AWS_NETWORKING_4",
                "check_name": "Ensure the default security group of every VPC restricts all traffic",
                "check_result": {
                    "result": "FAILED",
                    "entity": {
                        "aws_vpc": {
                            "example": {
                                "cidr_block": [
                                    "10.0.0.0/16"
                                ]
                            }
                        }
                    }
                },
                "code_block": [
                    [
                        3,
                        "resource \"aws_vpc\" \"example\" {\n"
                    ],
                    [
                        4,
                        "    cidr_block = \"10.0.0.0/16\"\n"
                    ],
                    [
                        5,
                        "}\n"
                    ]
                ],
                "file_path": "/security_group_no_unused/main.tf",
                "file_abs_path": "/tmp/ws-scm/JS-Demo/security_group_no_unused/main.tf",
                "repo_file_path": "/security_group_no_unused/main.tf",
                "file_line_range": [
                    3,
                    5
                ],
                "resource": "aws_vpc.example",
                "evaluations": null,
                "check_class": "checkov.common.graph.checks_infra.base_check",
                "fixed_definition": null,
                "entity_tags": {},
                "caller_file_path": null,
                "caller_file_line_range": null,
                "guideline": "https://docs.bridgecrew.io/docs/networking_4"
            }
        ],
        "skipped_checks": [],
        "parsing_errors": []
    },
    "summary": {
        "passed": 49,
        "failed": 100,
        "skipped": 0,
        "parsing_errors": 0,
        "resource_count": 44,
        "checkov_version": "2.0.405"
    }
}
